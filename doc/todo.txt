TODO IDEA/GIT:
- naučiti kako napraviti hot restart
   - kako napraviti da se start napravi brže (izbaciti npm install)
- naučiti kako napraviti start as debug
- naučiti raditi sa tagovima u git-u i imati version history

TODO HCK VOLMANAGER GENERAL
- Whitelabel error page na produkciji (na refresh ili dohvat direktnog linka)
- Srediti build

Improve app stability
+ on registration submit catch and log api service's exception/error
- test performance with high volume volunteers in db
  - improve fetching volunteers data thru single select instead multi selects

Useability
- implement custom fields in (important info) Registration form
  - DB:
    - table hck.registrationfields(id text, label text, enabled boolean, ordernum int)
    - table hck.vregistrationfields(volunteerid int4, field text, checked boolean)
  - middleware
    - rest controller
      - for fetching list of all enabled registrationfields
      - saving volunteer's registration fields values into hck.vregistrationfields table
  - front
    - fetch list of all enabled registrationfields
    - order field list by orderNum
    - map and display checkbox components for every field
- add orderNum into hck.places table to define place item in select list on Registration form
- add place status to differentiate places from the non-places (county, country) and filter only places in placeOfLiving select list
+ after submitting the Registraton form check response status code
  - and display error message (if error exists) or
  - automatically go to confirmation page (if error does not exists)
+ after successfully login return json object with properties:
  - username
  - admin
  - changeCheck
  - changeStatus
  - exportAll
  - exportForCheck
+ logged-in user object (json) store in app context for secured routes
- during login hash password from request with user's salt and then compare with hashed password in users table
+ display username in upper-right corner
+ implement logout
  - on front side in drop down option
+ display username in upper-right corner
+ implement logout
  + on front side in drop down option
  + on server side as DELETE /auth
+ implement export all data
- optimize select for volunteers list
  - reduce additional selects for lookup tables
+ allow change status only for users with permission
+ allow change check only for user with permission
- enable secure hashing on database
  - procceed with following:
    - execute in postgres: create extension pgcrypto
    - update every user in hck.users with: update hck.users set salt = gen_salt('bf', 8);
    - update every password with update hck.users set pass = crypt(pass, salt);
    - every new user should first be initialized with gen_salt('bf', 8) in salt column (e.g. trigger or during insert)

Karlo:
+ comment REST for šifarnici
+ checkCheck/Status on backend
+ hash password
   - with blowfish alg
- excel export filtering ""
