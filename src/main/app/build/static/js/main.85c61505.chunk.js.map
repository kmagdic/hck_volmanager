{"version":3,"sources":["assets/volonteri.jpg","components/Law.tsx","utils/requests.tsx","utils/json-methods.tsx","utils/data.tsx","utils/oib.tsx","components/Registration.tsx","components/Approval.tsx","components/Confirmation.tsx","components/Login.tsx","components/CustomSelect.tsx","components/MenuAppBar.tsx","components/VolunteersList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Law","className","request","resource","fetching","method","body","fetch","headers","JSON","stringify","undefined","then","response","json","catch","e","console","log","emptyGroup","isEmpty","value","isNaN","toSafeNumber","nullsFirst","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","defaultDataGroupSort","a","b","groupOrderNum","cmp","orderNum","groupAName","group","toLocaleLowerCase","groupBName","indexA","indexOf","label","indexB","localeCompare","sortData","values","compare","sort","compared","find","groupingOptions","data","groupedObject","forEach","option","item","options","push","groupedItems","genders","checkOIB","s","length","i","parseInt","cnumber","toString","calcOIB","require","Registration","groupStyles","display","alignItems","justifyContent","fontSize","borderTop","borderBottom","padding","groupBadgeStyles","backgroundColor","color","lineHeight","minWidth","textAlign","borderRadius","formatGroupLabel","style","useState","dateTimeOpened","setDateTimeOpen","Date","dateTimeValue","setDateTimeValue","groupedPlaces","setGroupedPlaces","React","errorDOB","setErrorDOB","helperTextDOB","setHelperTextDOB","errorOIB","setErrorOIB","helperTextOIB","setHelperTextOIB","gender","setGender","errorGender","setErrorGender","helperTextGender","setHelperTextGender","id","placeOfLiving","setPlaceOfLiving","errorPlaceOfLiving","setErrorPlaceOfLiving","helperTextPlaceOfLiving","setHelperTextPlaceOfLiving","placeOfVolunteering","setPlaceOfVolunteering","errorPlaceOfVolunteering","setErrorPlaceOfVolunteering","helperTextPlaceOfVolunteering","setHelperTextPlaceOfVolunteering","qualificationSelect","setQualificationSelect","qualificationList","setQualificationList","customQualificationList","setCustomQualificationList","experienceSelect","setExperienceSelect","experienceList","setExperienceList","customExperienceList","setCustomExperienceList","serviceSelect","setServiceSelect","serviceList","setServiceList","customServiceList","setCustomServiceList","skillSelect","setSkillSelect","skillList","setSkillList","customSkillList","setCustomSkillList","history","useHistory","useEffect","placesData","places","map","place","name","postcode","postCode","county","sortedPlaces","newGroupedPlaces","qualificationsData","qualifications","qualification","qualificationGroup","sortedQualifications","newGroupedQualifications","experiencesData","experiences","experience","experienceGroup","sortedExperiences","newGroupedExperiences","servicesData","services","service","sortedServices","skillsData","skills","skill","skillGroup","sortedSkills","newGroupedSkills","validateOIB","target","oib","focus","error","parseDate","strDate","replace","dDate","parse","sc","split","c","dateParts","newDate","filter","p","join","getTime","getTimezoneOffset","getValues","list","custom","Array","isArray","noOptionsMessage","search","inputValue","includes","trim","category","onSubmit","event","preventDefault","elements","firstName","lastName","dob","address","phone","email","iceName","icePhone","householdElderly","checked","householdPregnatWomen","pregnatWoman","householdChild","householdChronicPatient","healthfine","customQualifications","customExperiences","customServices","customSkills","healthDetails","availabilityHoursWeekly","availabilityDetails","criminalRecord","form","toISOString","substr","gender00","validatingFields","action","autoComplete","FormControlLabel","control","TextField","required","variant","labelPlacement","FormControl","viewMode","viewDate","dateFormat","open","onChange","dateTime","_isValid","_d","setTimeout","closeOnSelect","renderInput","props","timeFormat","locale","FormHelperText","inputProps","onBlur","minLength","maxLength","helperText","inputId","placeholder","newGender","type","Checkbox","lQualificationList","lCustomQualificationList","closeMenuOnSelect","isValidNewOption","formatCreateLabel","isMulti","lExperienceList","lCustomExperienceList","lServiceList","lCustomServiceList","lSkillList","lCustomSkillList","multiline","FormLabel","component","RadioGroup","aria-label","Radio","Button","fullWidth","Approval","approved","setApproved","approvedSelected","src","logo","alt","href","to","disabled","Confirmation","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","avatar","margin","palette","secondary","main","width","submit","Login","classes","setEmail","password","setPassword","showPassword","setShowPassword","Container","maxWidth","CssBaseline","Typography","noValidate","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","BootstrapInput","withStyles","root","input","background","border","transition","transitions","create","fontFamily","borderColor","boxShadow","InputBase","flexWrap","CustomSelect","status","setStatus","Select","MenuItem","ListItemIcon","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","elevation","createStyles","flexGrow","menuButton","marginRight","title","MenuAppBar","auth","setAnchorEl","anchorRef","useRef","setOpen","handleClose","handleListKeyDown","key","goToLogin","AppBar","Toolbar","aria-controls","aria-haspopup","prevOpen","ref","Popper","anchorEl","current","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","_filefy","VolunteersList","cellStyle","getForRenderFullName","rowData","getForRenderDob","format","tableTitle","count","setTitle","columns","field","searchable","defaultSort","export","customFilterAndSearch","columnDef","render","hidden","Switch","backgroundCheckNeeded","setState","prevState","backgroundCheckPassed","state","isLoading","tableRef","dataManager","searchedData","height","onSearchChange","paging","exportAllData","exportButton","exportDelimiter","exportFileName","tableLayout","exportCsv","allColumns","allData","exportedData","CsvBuilder","setDelimeter","setColumns","addRows","exportFile","headerStyle","top","fontWeight","maxBodyHeight","localization","toolbar","exportTitle","exportAriaLabel","exportName","searchPlaceholder","searchTooltip","emptyDataSourceMessage","App","exact","path","Component","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.85c61505.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/volonteri.425dea6e.jpg\";","import React from \"react\";\n\nfunction Law() {\n  return (\n    <div className=\"law\">\n    <p>VOLONTIRANJE S RANJIVIM SKUPINAMA</p>\n    <p>Temeljem čl. 10. Zakona o volonterstvu, a s obzirom na skupine korisnika s kojima ćete potencijalno volontirati (djeca, osobe s invaliditetom, starije i nemoćne osobe, bolesne osobe ili osobe koje su potpuno ili djelomice lišene poslovne sposobnosti), pod kaznenom i materijalnom odgovornošću izjavite spadate li u sljedeće skupine:</p>\n    <p>1. osobe kojima traje sigurnosna mjera obveznog psihijatrijskog liječenja, obveznog liječenja od ovisnosti, obveznog psihosocijalnog tretmana, zabrane obavljanja određene dužnosti ili djelatnosti koja je u vezi s djelatnosti volontiranja, zabrane približavanja ili udaljenja iz zajedničkog kućanstva,</p>\n    <p>2. osobe kojima traje sigurnosna mjera zabrane obavljanja zvanja, djelatnosti ili dužnosti koja je u vezi s djelatnosti volontiranja izrečena sukladno tada važećim odredbama Kaznenog zakona, </p>\n    <p>3. osobe koje su pravomoćno osuđene ili se protiv njih vodi kazneni postupak za neko od kaznenih dijela protiv života i tijela, protiv osobne slobode, kaznenih dijela protiv spolne slobode, kaznenih dijela spolnog zlostavljanja i iskorištavanja djeteta, kaznenih djela protiv braka, obitelji i djece, </p>\n    <p>4. osobe koje su pravomoćno osuđene ili se protiv njih vodi kazneni postupak za neko od kaznenih djela protiv spolne slobode i spolnog ćudoređa, propisanih tada važećim odredbama Kaznenog zakona, </p>\n    <p>5. osoba prema kojima je izrečena prekršajno-pravna sankcija propisana Zakonom o zaštiti od nasilja u obitelji</p>\n    </div>\n  );\n}\nexport default Law","const urlAPI = \"/api/v1/\";\n//const urlAPI = \"http://localhost:8080/api/v1/\";\n//const urlAPI = \"https://hck-volmanager-dev.herokuapp.com/api/v1/\";\n\nconst proxyurl = \"\";\n//const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const request = (resource: string, fetching: any, method: string = \"GET\", body: any = null) => {\n  fetch(proxyurl + urlAPI + resource, \n    { \n      method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: body ? JSON.stringify(body) : undefined\n    } )\n    .then(response => {\n      //console.log(\"Response:\", response);\n      return response.json();\n    })\n    .then(fetching)\n    .catch((e: any) => console.log(\"Can’t access \" + proxyurl + urlAPI + resource + \" response because \" + e));\n}\n\n/*\nfetch(url, {\n  method: 'POST', // *GET, POST, PUT, DELETE, etc.\n  mode: 'cors', // no-cors, *cors, same-origin\n  cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  credentials: 'same-origin', // include, *same-origin, omit\n  headers: {\n    'Content-Type': 'application/json'\n    // 'Content-Type': 'application/x-www-form-urlencoded',\n  },\n  redirect: 'follow', // manual, *follow, error\n  referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n  body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n});\n*/\n\n/*\nfunction performSignIn(username: string, password: string) {\n  let headers = new Headers();\n\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Authorization', 'Basic ' + btoa(username + \":\" +  password));\n  headers.append('Origin','http://localhost:3000');\n\n  fetch(url, {\n      mode: 'cors',\n      credentials: 'include',\n      method: 'POST',\n      headers: headers\n  })\n  .then(response => response.json())\n  .then(json => console.log(json))\n  .catch(error => console.log('Authorization failed : ' + error.message));\n}\n*/","export interface ListItem {\n  value: number, \n  label: string,\n  //orderNum?: number;\n};\n\nexport interface GroupedOption {\n  label: string,\n  options: ListItem[],\n  //orderNum?: number\n};\n\nexport const emptyGroup: GroupedOption[] = [];\n\nexport const deepField = (obj: any, field: string) => field.split('.').reduce((att: any, value: any) => att[value], obj);\n\nexport interface CompareListItemsFunction {\n  (a: ListItem, b: ListItem): number;\n}\n\nexport interface CompareGroupedOptionsFunction {\n  (a: GroupedOption, b: GroupedOption): number;\n}\n\n//export const CompareListItemsByLabel: CompareListItemsFunction = (a: ListItem, b: ListItem) => a.label.localeCompare(b.label);\n//export const CompareGroupedOptionsByLabel: CompareGroupedOptionsFunction = (a: GroupedOption, b: GroupedOption) => a.label.localeCompare(b.label);\n\nexport const isEmpty = (value: any): boolean => (value === undefined) || (value === null) || isNaN(value);\nexport const toSafeNumber = (value: any, nullsFirst: boolean = false): number => \n  isEmpty(value) ? nullsFirst ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER : value;\n\nexport const defaultDataGroupSort: any[] = [\n    (a: any, b: any) => toSafeNumber(a.groupOrderNum) - toSafeNumber(b.groupOrderNum),\n    \"group\",\n    (a: any, b: any) => {\n      var cmp = toSafeNumber(a.orderNum) - toSafeNumber(b.orderNum)\n      //console.log(\"comparing\", a, b, \"with result\", cmp);\n      if (cmp === 0) {\n        const groupAName = a.group.toLocaleLowerCase();\n        const groupBName = b.group.toLocaleLowerCase();\n        const indexA = groupAName.indexOf(a.label.toLocaleLowerCase());\n        const indexB = groupBName.indexOf(b.label.toLocaleLowerCase());\n        if ((indexA === -1) && (indexB !== -1)) {\n          cmp = 1;  \n        }\n        else if ((indexA !== -1) && (indexB === -1)) {\n          cmp = -1;\n        } else {\n          cmp = a.label.localeCompare(b.label);\n        }\n        //console.log(\"correcting to\", cmp);\n      }\n      return cmp;\n      }\n  ];\n\n\nexport const sortData = (values: any[], compare: any[]): any[] => {\n  return values.sort((a: any, b: any): number => {\n    var compared = 0;\n    compare.find(cmp => {\n      var comparator: any;\n      if (typeof cmp === \"string\") {\n        comparator = (a: any, b: any) => a[cmp].localeCompare(b[cmp]);\n      } else {\n        comparator = cmp;\n      }\n      compared = comparator(a, b);\n      return compared !== 0;\n    });\n    return compared;\n  });\n}\n\nexport const groupingOptions = (data: any[]): GroupedOption[] => {\n  const groupedObject: { [key: string]: GroupedOption } = {};\n\n  data.forEach(option => {\n    const item = { value: option.value, label: option.label };\n    if (groupedObject[option.group]) {\n      groupedObject[option.group].options.push(item)\n    } else {\n      groupedObject[option.group] = { label: option.group, options: [item] }\n    }\n  })\n\n  var groupedItems: GroupedOption[] = [];\n  for(const group in groupedObject) {\n    groupedItems.push(groupedObject[group]);\n  }\n  return groupedItems;\n};\n\n\nexport const join = (first: any, second: any, create: any) => \n  first.map((fItem: any) => second.find((sItem: any) => create(fItem, sItem)) || fItem);\n","export interface DataItem { \n  id: number, \n  name: string, \n};\n\nexport interface Place { \n  id: number, \n  name: string, \n  county: string, \n  postCode: number, \n};\n\nexport interface SkillGroup {\n\tid: number,\n\tname: string,\n\torderNum?: number\n}\n\nexport interface Skill { \n  id: number, \n  name: string, \n\tskillGroup: SkillGroup,\n\torderNum?: number\n};\n\nexport const genders = [\n  { value: \"M\", label: \"muški\" },\n  { value: \"F\", label: \"ženski\" },\n  { value: \"A\", label: \"ne želim se izjasniti\" }\n];\nexport const places = [\n  { id: 1, name: \"Place A\", county: 1 },\n  { id: 2, name: \"Place B\", county: 2 },\n  { id: 3, name: \"Place C\", county: 3 },\n  { id: 4, name: \"Place D\", county: 1 },\n];\nexport const counties = [\n  { id: 1, name: \"County A\" },\n  { id: 2, name: \"County B\" },\n  { id: 3, name: \"County C\" },\n];\nexport const qualificationsData: DataItem[] = [\n  { id: 1, name: \"Qualification A\" },\n  { id: 2, name: \"Qualification B\" },\n  { id: 3, name: \"Qualification C\" },\n  { id: 4, name: \"Qualification D\" },\n  { id: 5, name: \"Qualification E\" },\n  { id: 6, name: \"Qualification F\" },\n  { id: 7, name: \"Qualification G\" },\n  { id: 8, name: \"Qualification H\" },\n];\nexport const experiencesData: DataItem[] = [\n  { id: 1, name: \"Experience A\" },\n  { id: 2, name: \"Experience B\" },\n  { id: 3, name: \"Experience C\" },\n  { id: 4, name: \"Experience D\" },\n  { id: 5, name: \"Experience E\" },\n  { id: 6, name: \"Experience F\" },\n  { id: 7, name: \"Experience G\" },\n  { id: 8, name: \"Experience H\" },\n];\nexport const servicesData: DataItem[] = [\n  { id: 1, name: \"Service A\" },\n  { id: 2, name: \"Service B\" },\n  { id: 3, name: \"Service C\" },\n  { id: 4, name: \"Service D\" },\n  { id: 5, name: \"Service E\" },\n  { id: 6, name: \"Service F\" },\n  { id: 7, name: \"Service G\" },\n  { id: 8, name: \"Service H\" },\n];\nexport const skillsData: DataItem[] = [\n  { id: 1, name: \"Skill A\" },\n  { id: 2, name: \"Skill B\" },\n  { id: 3, name: \"Skill C\" },\n  { id: 4, name: \"Skill D\" },\n  { id: 5, name: \"Skill E\" },\n  { id: 6, name: \"Skill F\" },\n  { id: 7, name: \"Skill G\" },\n  { id: 8, name: \"Skill H\" },\n];\n/*\nexport const skillsData2: Skill[] = [\n  { id: 1, name: \"Skill A\", group: \"psycho\" },\n  { id: 2, name: \"Skill B\", group: \"psycho\" },\n  { id: 3, name: \"Skill C\", group: \"tech\" },\n  { id: 4, name: \"Skill D\", group: \"tech\" },\n  { id: 5, name: \"Skill E\", group: \"psycho\" },\n  { id: 6, name: \"Skill F\", group: \"physical\" },\n  { id: 7, name: \"Skill G\", group: \"physical\" },\n  { id: 8, name: \"Skill H\", group: \"psycho\" },\n];\n*/\nexport const placesData0: Place[] = [\n\t{ id: 2, name: \"Ivanec\", county: \"Varaždinska županija\", postCode: 42100 },\n\t{ id: 3, name: \"Ludbreg\", county: \"Varaždinska županija\", postCode: 42000 },\n\t{ id: 21, name: \"Zagreb\", county: \"Zagrebačka županija\", postCode: 10000 },\n\t{ id: 1, name: \"Varaždin\", county: \"Varaždinska županija\", postCode: 42000 },\n\t{ id: 31, name: \"Bjelovar\", county: \"Bjelovarska županija\", postCode: 43000 },\n\t{ id: 41, name: \"Zadar\", county: \"Zadarska županija\", postCode: 21000 },\n\t{ id: 42, name: \"Benkovac\", county: \"Zadarska županija\", postCode: 21000 },\n\t{ id: 43, name: \"Pakoštane\", county: \"Zadarska županija\", postCode: 21000 },\n];\nexport const placesData = [\n  {\n      \"id\": 11,\n      \"name\": \"Beli Manastir\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 12,\n      \"name\": \"Draž\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 13,\n      \"name\": \"Čeminac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 14,\n      \"name\": \"Kneževi Vinogradi\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 15,\n      \"name\": \"Popovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 16,\n      \"name\": \"Petlovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 17,\n      \"name\": \"Jagodnjak\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 18,\n      \"name\": \"Benkovac\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23420\n  },\n  {\n      \"id\": 19,\n      \"name\": \"Polača\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 20,\n      \"name\": \"Stankovci\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23422\n  },\n  {\n      \"id\": 21,\n      \"name\": \"Lišane Ostrovičke\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23420\n  },\n  {\n      \"id\": 22,\n      \"name\": \"Biograd na moru\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23210\n  },\n  {\n      \"id\": 23,\n      \"name\": \"Sveti Filip i Jakov\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23210\n  },\n  {\n      \"id\": 24,\n      \"name\": \"Pakoštane\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23210\n  },\n  {\n      \"id\": 25,\n      \"name\": \"Pašman\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23212\n  },\n  {\n      \"id\": 26,\n      \"name\": \"Tkon\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23212\n  },\n  {\n      \"id\": 27,\n      \"name\": \"Bjelovar\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 28,\n      \"name\": \"Kapela\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 29,\n      \"name\": \"Nova Rača\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43270\n  },\n  {\n      \"id\": 30,\n      \"name\": \"Rovišće\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 31,\n      \"name\": \"Severin\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 32,\n      \"name\": \"Šandrovac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 33,\n      \"name\": \"Velika Pisanica\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43270\n  },\n  {\n      \"id\": 34,\n      \"name\": \"Veliko Trojstvo\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 35,\n      \"name\": \"Zrinski Topolovac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 36,\n      \"name\": \"Buje - Buie\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52460\n  },\n  {\n      \"id\": 37,\n      \"name\": \"Novigrad - Cittanova\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52466\n  },\n  {\n      \"id\": 38,\n      \"name\": \"Umag - Umago\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52470\n  },\n  {\n      \"id\": 39,\n      \"name\": \"Brtonigla - Verteneglio\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52466\n  },\n  {\n      \"id\": 40,\n      \"name\": \"Grožnjan - Grisignana\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52460\n  },\n  {\n      \"id\": 41,\n      \"name\": \"Oprtalj - Portole\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52460\n  },\n  {\n      \"id\": 42,\n      \"name\": \"Buzet\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52420\n  },\n  {\n      \"id\": 43,\n      \"name\": \"Lanišće\",\n      \"county\": \"Istarska\",\n      \"postCode\": 10450\n  },\n  {\n      \"id\": 44,\n      \"name\": \"Crikvenica\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51260\n  },\n  {\n      \"id\": 45,\n      \"name\": \"Čabar\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51306\n  },\n  {\n      \"id\": 46,\n      \"name\": \"Čakovec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 47,\n      \"name\": \"Belica\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 48,\n      \"name\": \"Dekanovec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 49,\n      \"name\": \"Domašinec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 50,\n      \"name\": \"Donja Dubrava\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 51,\n      \"name\": \"Donji Kraljevec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 52,\n      \"name\": \"Donji Vidovec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 53,\n      \"name\": \"Goričan\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 54,\n      \"name\": \"Gornji Mihaljevec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 55,\n      \"name\": \"Kotoriba\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 56,\n      \"name\": \"Mala Subotica\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 57,\n      \"name\": \"Nedelišće\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 58,\n      \"name\": \"Orehovica\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 59,\n      \"name\": \"Podturen\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 60,\n      \"name\": \"Pribislavec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 61,\n      \"name\": \"Selnica\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40313\n  },\n  {\n      \"id\": 62,\n      \"name\": \"Strahoninec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 63,\n      \"name\": \"Sveta Marija\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40320\n  },\n  {\n      \"id\": 64,\n      \"name\": \"Sveti Juraj na Bregu\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 65,\n      \"name\": \"Sveti Martin na Muri\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40313\n  },\n  {\n      \"id\": 66,\n      \"name\": \"Šenkovec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 10292\n  },\n  {\n      \"id\": 67,\n      \"name\": \"Štrigova\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40313\n  },\n  {\n      \"id\": 68,\n      \"name\": \"Vratišinec\",\n      \"county\": \"Međimurska\",\n      \"postCode\": 40315\n  },\n  {\n      \"id\": 69,\n      \"name\": \"Čazma\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43240\n  },\n  {\n      \"id\": 70,\n      \"name\": \"Štefanje\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43240\n  },\n  {\n      \"id\": 71,\n      \"name\": \"Ivanska\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 72,\n      \"name\": \"Darda\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31326\n  },\n  {\n      \"id\": 73,\n      \"name\": \"Bilje\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31000\n  },\n  {\n      \"id\": 74,\n      \"name\": \"Daruvar\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43500\n  },\n  {\n      \"id\": 75,\n      \"name\": \"Dežanovac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43500\n  },\n  {\n      \"id\": 76,\n      \"name\": \"Đulovac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43500\n  },\n  {\n      \"id\": 77,\n      \"name\": \"Končanica\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43500\n  },\n  {\n      \"id\": 78,\n      \"name\": \"Sirač\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43500\n  },\n  {\n      \"id\": 79,\n      \"name\": \"Delnice\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 80,\n      \"name\": \"Mrkopalj\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 81,\n      \"name\": \"Fužine\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 82,\n      \"name\": \"Lokve\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 83,\n      \"name\": \"Brod Moravice\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51326\n  },\n  {\n      \"id\": 84,\n      \"name\": \"Skrad\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 85,\n      \"name\": \"Ravna Gora\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51300\n  },\n  {\n      \"id\": 86,\n      \"name\": \"Donja Stubica\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49240\n  },\n  {\n      \"id\": 87,\n      \"name\": \"Oroslavje\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49243\n  },\n  {\n      \"id\": 88,\n      \"name\": \"Marija Bistrica\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49246\n  },\n  {\n      \"id\": 89,\n      \"name\": \"Gornja Stubica\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49240\n  },\n  {\n      \"id\": 90,\n      \"name\": \"Stubičke Toplice\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49240\n  },\n  {\n      \"id\": 91,\n      \"name\": \"Donji Lapac\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53250\n  },\n  {\n      \"id\": 92,\n      \"name\": \"Donji Miholjac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31540\n  },\n  {\n      \"id\": 93,\n      \"name\": \"Marijanci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31551\n  },\n  {\n      \"id\": 94,\n      \"name\": \"Viljevo\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31540\n  },\n  {\n      \"id\": 95,\n      \"name\": \"Magadenovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31540\n  },\n  {\n      \"id\": 96,\n      \"name\": \"Podravska Moslavina\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31540\n  },\n  {\n      \"id\": 97,\n      \"name\": \"Drniš\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22320\n  },\n  {\n      \"id\": 98,\n      \"name\": \"Promina\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22320\n  },\n  {\n      \"id\": 99,\n      \"name\": \"Ružić\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22320\n  },\n  {\n      \"id\": 100,\n      \"name\": \"Unešić\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22323\n  },\n  {\n      \"id\": 101,\n      \"name\": \"Dubrovnik\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20000\n  },\n  {\n      \"id\": 102,\n      \"name\": \"Župa Dubrovačka\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20207\n  },\n  {\n      \"id\": 103,\n      \"name\": \"Konavle\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20210\n  },\n  {\n      \"id\": 104,\n      \"name\": \"Ston\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20230\n  },\n  {\n      \"id\": 105,\n      \"name\": \"Janjina\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20246\n  },\n  {\n      \"id\": 106,\n      \"name\": \"Trpanj\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20240\n  },\n  {\n      \"id\": 107,\n      \"name\": \"Mljet\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20225\n  },\n  {\n      \"id\": 108,\n      \"name\": \"Dubrovačko primorje\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20232\n  },\n  {\n      \"id\": 109,\n      \"name\": \"Duga Resa\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47250\n  },\n  {\n      \"id\": 110,\n      \"name\": \"Netretić\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 111,\n      \"name\": \"Barilović\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47250\n  },\n  {\n      \"id\": 112,\n      \"name\": \"Generalski Stol\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47250\n  },\n  {\n      \"id\": 113,\n      \"name\": \"Bosiljevo\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 43240\n  },\n  {\n      \"id\": 114,\n      \"name\": \"Dugo Selo\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10370\n  },\n  {\n      \"id\": 115,\n      \"name\": \"Brckovljani\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10370\n  },\n  {\n      \"id\": 116,\n      \"name\": \"Rugvica\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10370\n  },\n  {\n      \"id\": 117,\n      \"name\": \"Dvor\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44440\n  },\n  {\n      \"id\": 118,\n      \"name\": \"Đakovo\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 119,\n      \"name\": \"Drenje\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 120,\n      \"name\": \"Gorjani\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 121,\n      \"name\": \"Levanjska Varoš\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 122,\n      \"name\": \"Strizivojna\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 123,\n      \"name\": \"Semeljci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 124,\n      \"name\": \"Satnica Đakovačka\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 125,\n      \"name\": \"Punitovci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 126,\n      \"name\": \"Trnava\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 127,\n      \"name\": \"Viškovci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31400\n  },\n  {\n      \"id\": 128,\n      \"name\": \"Đurđevac\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 129,\n      \"name\": \"Ferdinandovac\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 130,\n      \"name\": \"Kalinovac\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 131,\n      \"name\": \"Kloštar Podravski\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 132,\n      \"name\": \"Podravske Sesvete\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 133,\n      \"name\": \"Molve\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 134,\n      \"name\": \"Novo Virje\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 135,\n      \"name\": \"Virje\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 136,\n      \"name\": \"Garešnica\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43280\n  },\n  {\n      \"id\": 137,\n      \"name\": \"Berek\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43000\n  },\n  {\n      \"id\": 138,\n      \"name\": \"Hercegovac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43280\n  },\n  {\n      \"id\": 139,\n      \"name\": \"Velika Trnovitica\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43280\n  },\n  {\n      \"id\": 140,\n      \"name\": \"Glina\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44400\n  },\n  {\n      \"id\": 141,\n      \"name\": \"Gospić\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53000\n  },\n  {\n      \"id\": 142,\n      \"name\": \"Perušić\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53202\n  },\n  {\n      \"id\": 143,\n      \"name\": \"Karlobag\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53288\n  },\n  {\n      \"id\": 144,\n      \"name\": \"Lovinac\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 23241\n  },\n  {\n      \"id\": 145,\n      \"name\": \"Gračac\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 22222\n  },\n  {\n      \"id\": 146,\n      \"name\": \"Grad Zagreb\",\n      \"county\": \"Grad Zagreb\",\n      \"postCode\": 10000\n  },\n  {\n      \"id\": 147,\n      \"name\": \"Grubišno Polje\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43290\n  },\n  {\n      \"id\": 148,\n      \"name\": \"Veliki Grđevac\",\n      \"county\": \"Bjelovarsko-bilogorska\",\n      \"postCode\": 43270\n  },\n  {\n      \"id\": 149,\n      \"name\": \"Gvozd\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44410\n  },\n  {\n      \"id\": 150,\n      \"name\": \"Hrvatska Kostajnica\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44430\n  },\n  {\n      \"id\": 151,\n      \"name\": \"Hrvatska Dubica\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44430\n  },\n  {\n      \"id\": 152,\n      \"name\": \"Majur\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 10342\n  },\n  {\n      \"id\": 153,\n      \"name\": \"Donji Kukuruzari\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44430\n  },\n  {\n      \"id\": 154,\n      \"name\": \"Hvar\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21450\n  },\n  {\n      \"id\": 155,\n      \"name\": \"Stari Grad\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21460\n  },\n  {\n      \"id\": 156,\n      \"name\": \"Jelsa\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21465\n  },\n  {\n      \"id\": 157,\n      \"name\": \"Sućuraj\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21469\n  },\n  {\n      \"id\": 158,\n      \"name\": \"Ilok\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32236\n  },\n  {\n      \"id\": 159,\n      \"name\": \"Imotski\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21260\n  },\n  {\n      \"id\": 160,\n      \"name\": \"Runović\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21260\n  },\n  {\n      \"id\": 161,\n      \"name\": \"Zmijavci\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21260\n  },\n  {\n      \"id\": 162,\n      \"name\": \"Podbablje\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21262\n  },\n  {\n      \"id\": 163,\n      \"name\": \"Zagvozd\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21270\n  },\n  {\n      \"id\": 164,\n      \"name\": \"Lokvičići\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21260\n  },\n  {\n      \"id\": 165,\n      \"name\": \"Cista\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21256\n  },\n  {\n      \"id\": 166,\n      \"name\": \"Proložac\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21260\n  },\n  {\n      \"id\": 167,\n      \"name\": \"Ivanec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42240\n  },\n  {\n      \"id\": 168,\n      \"name\": \"Lepoglava\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42250\n  },\n  {\n      \"id\": 169,\n      \"name\": \"Bednja\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42250\n  },\n  {\n      \"id\": 170,\n      \"name\": \"Maruševec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42243\n  },\n  {\n      \"id\": 171,\n      \"name\": \"Klenovnik\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42240\n  },\n  {\n      \"id\": 172,\n      \"name\": \"Donja Voća\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42240\n  },\n  {\n      \"id\": 173,\n      \"name\": \"Ivanić-Grad\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10310\n  },\n  {\n      \"id\": 174,\n      \"name\": \"Kloštar Ivanić\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10310\n  },\n  {\n      \"id\": 175,\n      \"name\": \"Križ\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10315\n  },\n  {\n      \"id\": 176,\n      \"name\": \"Jastrebarsko\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10450\n  },\n  {\n      \"id\": 177,\n      \"name\": \"Klinča Sela\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10450\n  },\n  {\n      \"id\": 178,\n      \"name\": \"Krašić\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10454\n  },\n  {\n      \"id\": 179,\n      \"name\": \"Pisarovina\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10451\n  },\n  {\n      \"id\": 180,\n      \"name\": \"Žumberak\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10454\n  },\n  {\n      \"id\": 181,\n      \"name\": \"Karlovac\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 182,\n      \"name\": \"Draganić\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 183,\n      \"name\": \"Lasinja\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 184,\n      \"name\": \"Krnjak\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47220\n  },\n  {\n      \"id\": 185,\n      \"name\": \"Kaštela\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21214\n  },\n  {\n      \"id\": 186,\n      \"name\": \"Primorski Dolac\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21220\n  },\n  {\n      \"id\": 187,\n      \"name\": \"Prgomet\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21220\n  },\n  {\n      \"id\": 188,\n      \"name\": \"Lećevica\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21204\n  },\n  {\n      \"id\": 189,\n      \"name\": \"Klanjec\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 190,\n      \"name\": \"Tuhelj\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 191,\n      \"name\": \"Kumrovec\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 192,\n      \"name\": \"Zagorska Sela\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 193,\n      \"name\": \"Kraljevec na Sutli\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 194,\n      \"name\": \"Knin\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 195,\n      \"name\": \"Biskupija\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 196,\n      \"name\": \"Civljane\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 197,\n      \"name\": \"Ervenik\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 198,\n      \"name\": \"Kijevo\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 199,\n      \"name\": \"Kistanje\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 200,\n      \"name\": \"Koprivnica\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48000\n  },\n  {\n      \"id\": 201,\n      \"name\": \"Drnje\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48316\n  },\n  {\n      \"id\": 202,\n      \"name\": \"Đelekovec\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48316\n  },\n  {\n      \"id\": 203,\n      \"name\": \"Gola\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48331\n  },\n  {\n      \"id\": 204,\n      \"name\": \"Hlebine\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48316\n  },\n  {\n      \"id\": 205,\n      \"name\": \"Koprivnički Bregi\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48000\n  },\n  {\n      \"id\": 206,\n      \"name\": \"Koprivnički Ivanec\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48000\n  },\n  {\n      \"id\": 207,\n      \"name\": \"Legrad\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48316\n  },\n  {\n      \"id\": 208,\n      \"name\": \"Novigrad Podravski\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48350\n  },\n  {\n      \"id\": 209,\n      \"name\": \"Peteranec\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48316\n  },\n  {\n      \"id\": 210,\n      \"name\": \"Rasinja\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48000\n  },\n  {\n      \"id\": 211,\n      \"name\": \"Sokolovac\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 212,\n      \"name\": \"Korčula\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20260\n  },\n  {\n      \"id\": 213,\n      \"name\": \"Orebić\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20250\n  },\n  {\n      \"id\": 214,\n      \"name\": \"Lumbarda\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20260\n  },\n  {\n      \"id\": 215,\n      \"name\": \"Smokvica\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20271\n  },\n  {\n      \"id\": 216,\n      \"name\": \"Blato\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20225\n  },\n  {\n      \"id\": 217,\n      \"name\": \"Vela Luka\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20270\n  },\n  {\n      \"id\": 218,\n      \"name\": \"Krapina\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49000\n  },\n  {\n      \"id\": 219,\n      \"name\": \"Đurmanec\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49225\n  },\n  {\n      \"id\": 220,\n      \"name\": \"Jesenje\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49233\n  },\n  {\n      \"id\": 221,\n      \"name\": \"Petrovsko\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49000\n  },\n  {\n      \"id\": 222,\n      \"name\": \"Radoboj\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49000\n  },\n  {\n      \"id\": 223,\n      \"name\": \"Križevci\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48260\n  },\n  {\n      \"id\": 224,\n      \"name\": \"Kalnik\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48260\n  },\n  {\n      \"id\": 225,\n      \"name\": \"Gornja Rijeka\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48260\n  },\n  {\n      \"id\": 226,\n      \"name\": \"Sv. Petar Orehovec\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48260\n  },\n  {\n      \"id\": 227,\n      \"name\": \"Sv. Ivan Žabno\",\n      \"county\": \"Koprivničko-križevačka\",\n      \"postCode\": 48214\n  },\n  {\n      \"id\": 228,\n      \"name\": \"Krk\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51500\n  },\n  {\n      \"id\": 229,\n      \"name\": \"Omišalj\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51511\n  },\n  {\n      \"id\": 230,\n      \"name\": \"Malinska\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51511\n  },\n  {\n      \"id\": 231,\n      \"name\": \"Punat\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51500\n  },\n  {\n      \"id\": 232,\n      \"name\": \"Baška\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51523\n  },\n  {\n      \"id\": 233,\n      \"name\": \"Vrbnik\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 22300\n  },\n  {\n      \"id\": 234,\n      \"name\": \"Dobrinj\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51511\n  },\n  {\n      \"id\": 235,\n      \"name\": \"Kutina\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44320\n  },\n  {\n      \"id\": 236,\n      \"name\": \"Popovača\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44317\n  },\n  {\n      \"id\": 237,\n      \"name\": \"Velika Ludina\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44317\n  },\n  {\n      \"id\": 238,\n      \"name\": \"Labin\",\n      \"county\": \"Istarska\",\n      \"postCode\": 21220\n  },\n  {\n      \"id\": 239,\n      \"name\": \"Kršan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52333\n  },\n  {\n      \"id\": 240,\n      \"name\": \"Pićan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52000\n  },\n  {\n      \"id\": 241,\n      \"name\": \"Raša\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52220\n  },\n  {\n      \"id\": 242,\n      \"name\": \"Sv. Nedjelja\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52231\n  },\n  {\n      \"id\": 243,\n      \"name\": \"Ludbreg\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42230\n  },\n  {\n      \"id\": 244,\n      \"name\": \"Sveti Đurđ\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42230\n  },\n  {\n      \"id\": 245,\n      \"name\": \"Martijanec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42230\n  },\n  {\n      \"id\": 246,\n      \"name\": \"Veliki Bukovec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42230\n  },\n  {\n      \"id\": 247,\n      \"name\": \"Mali Bukovec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42230\n  },\n  {\n      \"id\": 248,\n      \"name\": \"Makarska\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21300\n  },\n  {\n      \"id\": 249,\n      \"name\": \"Brela\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21320\n  },\n  {\n      \"id\": 250,\n      \"name\": \"Baška Voda\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21320\n  },\n  {\n      \"id\": 251,\n      \"name\": \"Tučepi\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21300\n  },\n  {\n      \"id\": 252,\n      \"name\": \"Podgora\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 20232\n  },\n  {\n      \"id\": 253,\n      \"name\": \"Gradac\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21330\n  },\n  {\n      \"id\": 254,\n      \"name\": \"Mali Lošinj\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51550\n  },\n  {\n      \"id\": 255,\n      \"name\": \"Cres\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51557\n  },\n  {\n      \"id\": 256,\n      \"name\": \"Metković\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20350\n  },\n  {\n      \"id\": 257,\n      \"name\": \"Opuzen\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20355\n  },\n  {\n      \"id\": 258,\n      \"name\": \"Kula Norinska\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20350\n  },\n  {\n      \"id\": 259,\n      \"name\": \"Slivno\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 21270\n  },\n  {\n      \"id\": 260,\n      \"name\": \"Zažablje\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20353\n  },\n  {\n      \"id\": 261,\n      \"name\": \"Pojezerje\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20342\n  },\n  {\n      \"id\": 262,\n      \"name\": \"Našice\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 263,\n      \"name\": \"Donja Motičina\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 264,\n      \"name\": \"Đurđenovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 265,\n      \"name\": \"Feričanci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 266,\n      \"name\": \"Koška\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 267,\n      \"name\": \"Podgorač\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31500\n  },\n  {\n      \"id\": 268,\n      \"name\": \"Nova Gradiška\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35400\n  },\n  {\n      \"id\": 269,\n      \"name\": \"Okučani\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35430\n  },\n  {\n      \"id\": 270,\n      \"name\": \"Stara Gradiška\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35430\n  },\n  {\n      \"id\": 271,\n      \"name\": \"Gornji Bogićevci\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35430\n  },\n  {\n      \"id\": 272,\n      \"name\": \"Dragalić\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35400\n  },\n  {\n      \"id\": 273,\n      \"name\": \"Cernik\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 10454\n  },\n  {\n      \"id\": 274,\n      \"name\": \"Rešetari\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35400\n  },\n  {\n      \"id\": 275,\n      \"name\": \"Vrbje\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35400\n  },\n  {\n      \"id\": 276,\n      \"name\": \"Staro Petrovo Selo\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35420\n  },\n  {\n      \"id\": 277,\n      \"name\": \"Davor\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35400\n  },\n  {\n      \"id\": 278,\n      \"name\": \"Nova Kapela\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 10342\n  },\n  {\n      \"id\": 279,\n      \"name\": \"Novi Marof\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42220\n  },\n  {\n      \"id\": 280,\n      \"name\": \"Varaždinske Toplice\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42223\n  },\n  {\n      \"id\": 281,\n      \"name\": \"Ljubešćica\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42220\n  },\n  {\n      \"id\": 282,\n      \"name\": \"Breznički Hum\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42220\n  },\n  {\n      \"id\": 283,\n      \"name\": \"Breznica\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42220\n  },\n  {\n      \"id\": 284,\n      \"name\": \"Viskovo\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42220\n  },\n  {\n      \"id\": 285,\n      \"name\": \"Novi Vinodolski\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51250\n  },\n  {\n      \"id\": 286,\n      \"name\": \"Vinodolska Općina\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51253\n  },\n  {\n      \"id\": 287,\n      \"name\": \"Novska\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44330\n  },\n  {\n      \"id\": 288,\n      \"name\": \"Jasenovac\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 31300\n  },\n  {\n      \"id\": 289,\n      \"name\": \"Lipovljani\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44330\n  },\n  {\n      \"id\": 290,\n      \"name\": \"Obrovac\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23450\n  },\n  {\n      \"id\": 291,\n      \"name\": \"Ogulin\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47300\n  },\n  {\n      \"id\": 292,\n      \"name\": \"Josipdol\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47300\n  },\n  {\n      \"id\": 293,\n      \"name\": \"Plaški\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47300\n  },\n  {\n      \"id\": 294,\n      \"name\": \"Saborsko\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47300\n  },\n  {\n      \"id\": 295,\n      \"name\": \"Tounj\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47300\n  },\n  {\n      \"id\": 296,\n      \"name\": \"Omiš\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21310\n  },\n  {\n      \"id\": 297,\n      \"name\": \"Dugi Rat\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21315\n  },\n  {\n      \"id\": 298,\n      \"name\": \"Šestanovac\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21250\n  },\n  {\n      \"id\": 299,\n      \"name\": \"Zadvarje\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21250\n  },\n  {\n      \"id\": 300,\n      \"name\": \"Opatija\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51410\n  },\n  {\n      \"id\": 301,\n      \"name\": \"Lovran\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51415\n  },\n  {\n      \"id\": 302,\n      \"name\": \"Mošćenička Draga\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51417\n  },\n  {\n      \"id\": 303,\n      \"name\": \"Matulji\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51211\n  },\n  {\n      \"id\": 304,\n      \"name\": \"Orahovica\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33515\n  },\n  {\n      \"id\": 305,\n      \"name\": \"Crnac\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33515\n  },\n  {\n      \"id\": 306,\n      \"name\": \"Čačinci\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33515\n  },\n  {\n      \"id\": 307,\n      \"name\": \"Zdenci\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33515\n  },\n  {\n      \"id\": 308,\n      \"name\": \"Osijek\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31000\n  },\n  {\n      \"id\": 309,\n      \"name\": \"Antunovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31200\n  },\n  {\n      \"id\": 310,\n      \"name\": \"Čepin\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31431\n  },\n  {\n      \"id\": 311,\n      \"name\": \"Erdut\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31226\n  },\n  {\n      \"id\": 312,\n      \"name\": \"Ernestinovo\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31200\n  },\n  {\n      \"id\": 313,\n      \"name\": \"Šodolovci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31200\n  },\n  {\n      \"id\": 314,\n      \"name\": \"Vladislavci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31431\n  },\n  {\n      \"id\": 315,\n      \"name\": \"Vuka\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31431\n  },\n  {\n      \"id\": 316,\n      \"name\": \"Otočac\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53220\n  },\n  {\n      \"id\": 317,\n      \"name\": \"Brinje\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53260\n  },\n  {\n      \"id\": 318,\n      \"name\": \"Vrhovine\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53220\n  },\n  {\n      \"id\": 319,\n      \"name\": \"Ozalj\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47280\n  },\n  {\n      \"id\": 320,\n      \"name\": \"Kamanje\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47280\n  },\n  {\n      \"id\": 321,\n      \"name\": \"Ribnik\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 322,\n      \"name\": \"Žakanje\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47000\n  },\n  {\n      \"id\": 323,\n      \"name\": \"Pag\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23250\n  },\n  {\n      \"id\": 324,\n      \"name\": \"Novalja\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 53291\n  },\n  {\n      \"id\": 325,\n      \"name\": \"Kolan\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23250\n  },\n  {\n      \"id\": 326,\n      \"name\": \"Povljana\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23250\n  },\n  {\n      \"id\": 327,\n      \"name\": \"Pakrac\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34550\n  },\n  {\n      \"id\": 328,\n      \"name\": \"Lipik\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34550\n  },\n  {\n      \"id\": 329,\n      \"name\": \"Pazin\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52000\n  },\n  {\n      \"id\": 330,\n      \"name\": \"Cerovlje\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52000\n  },\n  {\n      \"id\": 331,\n      \"name\": \"Gračišće\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52000\n  },\n  {\n      \"id\": 332,\n      \"name\": \"Karojba\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52424\n  },\n  {\n      \"id\": 333,\n      \"name\": \"Lupoglav\",\n      \"county\": \"Istarska\",\n      \"postCode\": 10370\n  },\n  {\n      \"id\": 334,\n      \"name\": \"Motovun\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52424\n  },\n  {\n      \"id\": 335,\n      \"name\": \"Sveti Petar u Šumi\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52341\n  },\n  {\n      \"id\": 336,\n      \"name\": \"Tinjan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52000\n  },\n  {\n      \"id\": 337,\n      \"name\": \"Petrinja\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44250\n  },\n  {\n      \"id\": 338,\n      \"name\": \"Plitvička jezera\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53230\n  },\n  {\n      \"id\": 339,\n      \"name\": \"Udbina\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 53234\n  },\n  {\n      \"id\": 340,\n      \"name\": \"Ploče\",\n      \"county\": \"Dubrovačko-neretvanska\",\n      \"postCode\": 20340\n  },\n  {\n      \"id\": 341,\n      \"name\": \"Poreč\",\n      \"county\": \"Istarska\",\n      \"postCode\": 34340\n  },\n  {\n      \"id\": 342,\n      \"name\": \"Vrsar\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52450\n  },\n  {\n      \"id\": 343,\n      \"name\": \"Funtana\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52440\n  },\n  {\n      \"id\": 344,\n      \"name\": \"Sv. Lovreč\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52440\n  },\n  {\n      \"id\": 345,\n      \"name\": \"Višnjan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52440\n  },\n  {\n      \"id\": 346,\n      \"name\": \"Vižinada\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52440\n  },\n  {\n      \"id\": 347,\n      \"name\": \"Kaštelir-Labinci\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52464\n  },\n  {\n      \"id\": 348,\n      \"name\": \"Tar-Vabriga\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52465\n  },\n  {\n      \"id\": 349,\n      \"name\": \"Požega\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34000\n  },\n  {\n      \"id\": 350,\n      \"name\": \"Pleternica\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34310\n  },\n  {\n      \"id\": 351,\n      \"name\": \"Kutjevo\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34340\n  },\n  {\n      \"id\": 352,\n      \"name\": \"Brestovac\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34000\n  },\n  {\n      \"id\": 353,\n      \"name\": \"Čaglin\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34340\n  },\n  {\n      \"id\": 354,\n      \"name\": \"Kaptol\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34000\n  },\n  {\n      \"id\": 355,\n      \"name\": \"Jakšić\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34000\n  },\n  {\n      \"id\": 356,\n      \"name\": \"Velika\",\n      \"county\": \"Požeško-slavonska\",\n      \"postCode\": 34000\n  },\n  {\n      \"id\": 357,\n      \"name\": \"Pregrada\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49218\n  },\n  {\n      \"id\": 358,\n      \"name\": \"Desinić\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49216\n  },\n  {\n      \"id\": 359,\n      \"name\": \"Hum na Sutli\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49231\n  },\n  {\n      \"id\": 360,\n      \"name\": \"Pula\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52100\n  },\n  {\n      \"id\": 361,\n      \"name\": \"Vodnjan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52100\n  },\n  {\n      \"id\": 362,\n      \"name\": \"Medulin\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52100\n  },\n  {\n      \"id\": 363,\n      \"name\": \"Ližnjan\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52100\n  },\n  {\n      \"id\": 364,\n      \"name\": \"Fažana\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52100\n  },\n  {\n      \"id\": 365,\n      \"name\": \"Svetvinčenat\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52341\n  },\n  {\n      \"id\": 366,\n      \"name\": \"Marčana\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52207\n  },\n  {\n      \"id\": 367,\n      \"name\": \"Barban\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52207\n  },\n  {\n      \"id\": 368,\n      \"name\": \"Rab\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51280\n  },\n  {\n      \"id\": 369,\n      \"name\": \"Lopar\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51280\n  },\n  {\n      \"id\": 370,\n      \"name\": \"Rijeka\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51000\n  },\n  {\n      \"id\": 371,\n      \"name\": \"Bakar\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51262\n  },\n  {\n      \"id\": 372,\n      \"name\": \"Kastav\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51215\n  },\n  {\n      \"id\": 373,\n      \"name\": \"Kraljevica\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51262\n  },\n  {\n      \"id\": 374,\n      \"name\": \"Čavle\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51218\n  },\n  {\n      \"id\": 375,\n      \"name\": \"Jelenje\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51218\n  },\n  {\n      \"id\": 376,\n      \"name\": \"Klana\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51217\n  },\n  {\n      \"id\": 377,\n      \"name\": \"Kostrena\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51000\n  },\n  {\n      \"id\": 378,\n      \"name\": \"Viškovo\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51216\n  },\n  {\n      \"id\": 379,\n      \"name\": \"Rovinj\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52210\n  },\n  {\n      \"id\": 380,\n      \"name\": \"Žminj\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52341\n  },\n  {\n      \"id\": 381,\n      \"name\": \"Kanfanar\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52341\n  },\n  {\n      \"id\": 382,\n      \"name\": \"Bale\",\n      \"county\": \"Istarska\",\n      \"postCode\": 52210\n  },\n  {\n      \"id\": 383,\n      \"name\": \"Samobor\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10430\n  },\n  {\n      \"id\": 384,\n      \"name\": \"Sveta Nedjelja\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 21465\n  },\n  {\n      \"id\": 385,\n      \"name\": \"Stupnik\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10255\n  },\n  {\n      \"id\": 386,\n      \"name\": \"Senj\",\n      \"county\": \"Ličko-senjska\",\n      \"postCode\": 52420\n  },\n  {\n      \"id\": 387,\n      \"name\": \"Sinj\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21230\n  },\n  {\n      \"id\": 388,\n      \"name\": \"Trilj\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21240\n  },\n  {\n      \"id\": 389,\n      \"name\": \"Hrvace\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21233\n  },\n  {\n      \"id\": 390,\n      \"name\": \"Otok\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 20355\n  },\n  {\n      \"id\": 391,\n      \"name\": \"Dicmo\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21232\n  },\n  {\n      \"id\": 392,\n      \"name\": \"Sisak\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44000\n  },\n  {\n      \"id\": 393,\n      \"name\": \"Sunja\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44210\n  },\n  {\n      \"id\": 394,\n      \"name\": \"Martinska Ves\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 395,\n      \"name\": \"Lekenik\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44250\n  },\n  {\n      \"id\": 396,\n      \"name\": \"Slatina\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 397,\n      \"name\": \"Mikleuš\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33515\n  },\n  {\n      \"id\": 398,\n      \"name\": \"Voćin\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33520\n  },\n  {\n      \"id\": 399,\n      \"name\": \"N. Bukovica\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33520\n  },\n  {\n      \"id\": 400,\n      \"name\": \"Čađavica\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33520\n  },\n  {\n      \"id\": 401,\n      \"name\": \"Sopje\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33520\n  },\n  {\n      \"id\": 402,\n      \"name\": \"Slavonski Brod\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 403,\n      \"name\": \"Bukovlje\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 404,\n      \"name\": \"Brodski Stupnik\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35252\n  },\n  {\n      \"id\": 405,\n      \"name\": \"Bebrina\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 406,\n      \"name\": \"Donji Andrijevci\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35214\n  },\n  {\n      \"id\": 407,\n      \"name\": \"Garčin\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35212\n  },\n  {\n      \"id\": 408,\n      \"name\": \"Gornja Vrba\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 409,\n      \"name\": \"Gundinci\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35222\n  },\n  {\n      \"id\": 410,\n      \"name\": \"Klakar\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 411,\n      \"name\": \"Oprisavci\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35212\n  },\n  {\n      \"id\": 412,\n      \"name\": \"Oriovac\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35250\n  },\n  {\n      \"id\": 516,\n      \"name\": \"Zadar\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23000\n  },\n  {\n      \"id\": 413,\n      \"name\": \"Podcrkavlje\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35000\n  },\n  {\n      \"id\": 414,\n      \"name\": \"Sibinj\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35252\n  },\n  {\n      \"id\": 415,\n      \"name\": \"Sikirevci\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35222\n  },\n  {\n      \"id\": 416,\n      \"name\": \"Slavonski Šamac\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35220\n  },\n  {\n      \"id\": 417,\n      \"name\": \"Velika Kopanica\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 35214\n  },\n  {\n      \"id\": 418,\n      \"name\": \"Vrpolje\",\n      \"county\": \"Brodsko-posavska\",\n      \"postCode\": 21240\n  },\n  {\n      \"id\": 419,\n      \"name\": \"Slunj\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47240\n  },\n  {\n      \"id\": 420,\n      \"name\": \"Cetingrad\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47240\n  },\n  {\n      \"id\": 421,\n      \"name\": \"Rakovica\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47240\n  },\n  {\n      \"id\": 422,\n      \"name\": \"Solin\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21210\n  },\n  {\n      \"id\": 423,\n      \"name\": \"Klis\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21204\n  },\n  {\n      \"id\": 424,\n      \"name\": \"Dugopolje\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21204\n  },\n  {\n      \"id\": 425,\n      \"name\": \"Muć\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21247\n  },\n  {\n      \"id\": 426,\n      \"name\": \"Split\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21000\n  },\n  {\n      \"id\": 427,\n      \"name\": \"Šolta\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21430\n  },\n  {\n      \"id\": 428,\n      \"name\": \"Podstrana\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21312\n  },\n  {\n      \"id\": 429,\n      \"name\": \"Supetar\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21400\n  },\n  {\n      \"id\": 430,\n      \"name\": \"Bol\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21420\n  },\n  {\n      \"id\": 431,\n      \"name\": \"Nerežišća\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21400\n  },\n  {\n      \"id\": 432,\n      \"name\": \"Milna\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21405\n  },\n  {\n      \"id\": 433,\n      \"name\": \"Sutivan\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21400\n  },\n  {\n      \"id\": 434,\n      \"name\": \"Postira\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21400\n  },\n  {\n      \"id\": 435,\n      \"name\": \"Pućišća\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21412\n  },\n  {\n      \"id\": 436,\n      \"name\": \"Selca\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21425\n  },\n  {\n      \"id\": 437,\n      \"name\": \"Sv. Ivan Zelina\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10380\n  },\n  {\n      \"id\": 438,\n      \"name\": \"Bedenica\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10380\n  },\n  {\n      \"id\": 439,\n      \"name\": \"Šibenik\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22000\n  },\n  {\n      \"id\": 440,\n      \"name\": \"Skradin\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22222\n  },\n  {\n      \"id\": 441,\n      \"name\": \"Primošten\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22202\n  },\n  {\n      \"id\": 442,\n      \"name\": \"Rogoznica\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22202\n  },\n  {\n      \"id\": 443,\n      \"name\": \"Tribunj\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22211\n  },\n  {\n      \"id\": 444,\n      \"name\": \"Pirovac\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22213\n  },\n  {\n      \"id\": 445,\n      \"name\": \"Murter-Kornati\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22244\n  },\n  {\n      \"id\": 446,\n      \"name\": \"Tisno\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22240\n  },\n  {\n      \"id\": 447,\n      \"name\": \"Tribunj\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22211\n  },\n  {\n      \"id\": 448,\n      \"name\": \"Topusko\",\n      \"county\": \"Sisačko-moslavačka\",\n      \"postCode\": 44400\n  },\n  {\n      \"id\": 449,\n      \"name\": \"Trogir\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21220\n  },\n  {\n      \"id\": 450,\n      \"name\": \"Okrug\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21223\n  },\n  {\n      \"id\": 451,\n      \"name\": \"Seget\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21220\n  },\n  {\n      \"id\": 452,\n      \"name\": \"Marina\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21222\n  },\n  {\n      \"id\": 453,\n      \"name\": \"Valpovo\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31550\n  },\n  {\n      \"id\": 454,\n      \"name\": \"Belišće\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31551\n  },\n  {\n      \"id\": 455,\n      \"name\": \"Bizovac\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31550\n  },\n  {\n      \"id\": 456,\n      \"name\": \"Petrijevci\",\n      \"county\": \"Osječko-baranjska\",\n      \"postCode\": 31550\n  },\n  {\n      \"id\": 457,\n      \"name\": \"Varaždin\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42000\n  },\n  {\n      \"id\": 458,\n      \"name\": \"Cestica\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42208\n  },\n  {\n      \"id\": 459,\n      \"name\": \"Sračinec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42000\n  },\n  {\n      \"id\": 460,\n      \"name\": \"Petrijanec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42208\n  },\n  {\n      \"id\": 461,\n      \"name\": \"Vidovec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42000\n  },\n  {\n      \"id\": 462,\n      \"name\": \"G. Kneginec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42204\n  },\n  {\n      \"id\": 463,\n      \"name\": \"Beretinec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42204\n  },\n  {\n      \"id\": 464,\n      \"name\": \"Sv. Ilija\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42204\n  },\n  {\n      \"id\": 465,\n      \"name\": \"Trnovec\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 466,\n      \"name\": \"Jalžabet\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42202\n  },\n  {\n      \"id\": 467,\n      \"name\": \"Vinica\",\n      \"county\": \"Varaždinska\",\n      \"postCode\": 42243\n  },\n  {\n      \"id\": 468,\n      \"name\": \"Velika Gorica\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10410\n  },\n  {\n      \"id\": 469,\n      \"name\": \"Pokupsko\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10414\n  },\n  {\n      \"id\": 470,\n      \"name\": \"Kravarsko\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10413\n  },\n  {\n      \"id\": 471,\n      \"name\": \"Orle\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10410\n  },\n  {\n      \"id\": 472,\n      \"name\": \"Vinkovci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 473,\n      \"name\": \"Otok\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 20355\n  },\n  {\n      \"id\": 474,\n      \"name\": \"Andrijaševci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 475,\n      \"name\": \"Ivankovo\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 476,\n      \"name\": \"Jarmina\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 477,\n      \"name\": \"Markušica\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 478,\n      \"name\": \"Nijemci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32252\n  },\n  {\n      \"id\": 479,\n      \"name\": \"Nuštar\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 480,\n      \"name\": \"Privlaka\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 23233\n  },\n  {\n      \"id\": 481,\n      \"name\": \"Stari Jankovci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32242\n  },\n  {\n      \"id\": 482,\n      \"name\": \"Stari Mikanovci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32284\n  },\n  {\n      \"id\": 483,\n      \"name\": \"Tordinci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32100\n  },\n  {\n      \"id\": 484,\n      \"name\": \"Vođinci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32284\n  },\n  {\n      \"id\": 485,\n      \"name\": \"Virovitica\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33000\n  },\n  {\n      \"id\": 486,\n      \"name\": \"Pitomača\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33405\n  },\n  {\n      \"id\": 487,\n      \"name\": \"Lukač\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33000\n  },\n  {\n      \"id\": 488,\n      \"name\": \"Suhopolje\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33410\n  },\n  {\n      \"id\": 489,\n      \"name\": \"Špišić Bukovica\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 33000\n  },\n  {\n      \"id\": 490,\n      \"name\": \"Gradina\",\n      \"county\": \"Virovitičko-podravska\",\n      \"postCode\": 22222\n  },\n  {\n      \"id\": 491,\n      \"name\": \"Vis\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21480\n  },\n  {\n      \"id\": 492,\n      \"name\": \"Vodice\",\n      \"county\": \"Šibensko-kninska\",\n      \"postCode\": 22211\n  },\n  {\n      \"id\": 493,\n      \"name\": \"Vojnić\",\n      \"county\": \"Karlovačka\",\n      \"postCode\": 47220\n  },\n  {\n      \"id\": 494,\n      \"name\": \"Vrbovec\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 495,\n      \"name\": \"Dubrava\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10342\n  },\n  {\n      \"id\": 496,\n      \"name\": \"Gradec\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 497,\n      \"name\": \"Farkaševac\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10342\n  },\n  {\n      \"id\": 498,\n      \"name\": \"Rakovec\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 499,\n      \"name\": \"Preseka\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10340\n  },\n  {\n      \"id\": 500,\n      \"name\": \"Vrbovsko\",\n      \"county\": \"Primorsko-goranska\",\n      \"postCode\": 51326\n  },\n  {\n      \"id\": 501,\n      \"name\": \"Vrgorac\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21276\n  },\n  {\n      \"id\": 502,\n      \"name\": \"Vrlika\",\n      \"county\": \"Splitsko-dalmatinska\",\n      \"postCode\": 21236\n  },\n  {\n      \"id\": 503,\n      \"name\": \"Vukovar\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32000\n  },\n  {\n      \"id\": 504,\n      \"name\": \"Bogdanovci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32000\n  },\n  {\n      \"id\": 505,\n      \"name\": \"Borovo\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32000\n  },\n  {\n      \"id\": 506,\n      \"name\": \"Lovas\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32236\n  },\n  {\n      \"id\": 507,\n      \"name\": \"Negoslavci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32000\n  },\n  {\n      \"id\": 508,\n      \"name\": \"Tompojevci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32242\n  },\n  {\n      \"id\": 509,\n      \"name\": \"Tovarnik\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32249\n  },\n  {\n      \"id\": 510,\n      \"name\": \"Trpinja\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32000\n  },\n  {\n      \"id\": 511,\n      \"name\": \"Zabok\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49210\n  },\n  {\n      \"id\": 512,\n      \"name\": \"Bedekovčina\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49221\n  },\n  {\n      \"id\": 513,\n      \"name\": \"Krapinske Toplice\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49217\n  },\n  {\n      \"id\": 514,\n      \"name\": \"Sv. Križ Začretje\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49223\n  },\n  {\n      \"id\": 515,\n      \"name\": \"Veliko Trgovišće\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49210\n  },\n  {\n      \"id\": 517,\n      \"name\": \"Nin\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23232\n  },\n  {\n      \"id\": 518,\n      \"name\": \"Starigrad\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23244\n  },\n  {\n      \"id\": 519,\n      \"name\": \"Posedarje\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23242\n  },\n  {\n      \"id\": 520,\n      \"name\": \"Novigrad\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23312\n  },\n  {\n      \"id\": 521,\n      \"name\": \"Poličnik\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23241\n  },\n  {\n      \"id\": 522,\n      \"name\": \"Škabrnja\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23223\n  },\n  {\n      \"id\": 523,\n      \"name\": \"Zemunik\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23222\n  },\n  {\n      \"id\": 524,\n      \"name\": \"Galovac\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23222\n  },\n  {\n      \"id\": 525,\n      \"name\": \"Sukošan\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23206\n  },\n  {\n      \"id\": 526,\n      \"name\": \"Bibinje\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23205\n  },\n  {\n      \"id\": 527,\n      \"name\": \"Kukljica\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23271\n  },\n  {\n      \"id\": 528,\n      \"name\": \"Preko\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23273\n  },\n  {\n      \"id\": 529,\n      \"name\": \"Sali\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23281\n  },\n  {\n      \"id\": 530,\n      \"name\": \"Kali\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23273\n  },\n  {\n      \"id\": 531,\n      \"name\": \"Ražanac\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23248\n  },\n  {\n      \"id\": 532,\n      \"name\": \"Privlaka\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23233\n  },\n  {\n      \"id\": 533,\n      \"name\": \"Vir\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23234\n  },\n  {\n      \"id\": 534,\n      \"name\": \"Vrsi\",\n      \"county\": \"Zadarska\",\n      \"postCode\": 23235\n  },\n  {\n      \"id\": 535,\n      \"name\": \"Zaprešić\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10290\n  },\n  {\n      \"id\": 536,\n      \"name\": \"Bistra\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10298\n  },\n  {\n      \"id\": 537,\n      \"name\": \"Brdovec\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10291\n  },\n  {\n      \"id\": 538,\n      \"name\": \"Dubravica\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10292\n  },\n  {\n      \"id\": 539,\n      \"name\": \"Jakovlje\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10297\n  },\n  {\n      \"id\": 540,\n      \"name\": \"Luka\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10297\n  },\n  {\n      \"id\": 541,\n      \"name\": \"Marija Gorica\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 10291\n  },\n  {\n      \"id\": 542,\n      \"name\": \"Pušća\",\n      \"county\": \"Zagrebačka\",\n      \"postCode\": 49290\n  },\n  {\n      \"id\": 543,\n      \"name\": \"Zlatar\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49250\n  },\n  {\n      \"id\": 544,\n      \"name\": \"Budinščina\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49284\n  },\n  {\n      \"id\": 545,\n      \"name\": \"Hraščina\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49283\n  },\n  {\n      \"id\": 546,\n      \"name\": \"Konjščina\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49282\n  },\n  {\n      \"id\": 547,\n      \"name\": \"Lobor\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49250\n  },\n  {\n      \"id\": 548,\n      \"name\": \"Mače\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49250\n  },\n  {\n      \"id\": 549,\n      \"name\": \"Mihovljan\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 40000\n  },\n  {\n      \"id\": 550,\n      \"name\": \"Novi Golubovec\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49252\n  },\n  {\n      \"id\": 551,\n      \"name\": \"Zlatar Bistrica\",\n      \"county\": \"Krapinsko-zagorska\",\n      \"postCode\": 49247\n  },\n  {\n      \"id\": 552,\n      \"name\": \"Županja\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32270\n  },\n  {\n      \"id\": 553,\n      \"name\": \"Babina Greda\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32270\n  },\n  {\n      \"id\": 554,\n      \"name\": \"Bošnjaci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32270\n  },\n  {\n      \"id\": 555,\n      \"name\": \"Cerna\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32272\n  },\n  {\n      \"id\": 556,\n      \"name\": \"Drenovci\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32257\n  },\n  {\n      \"id\": 557,\n      \"name\": \"Gradište\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32272\n  },\n  {\n      \"id\": 558,\n      \"name\": \"Gunja\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32257\n  },\n  {\n      \"id\": 559,\n      \"name\": \"Štitar\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32270\n  },\n  {\n      \"id\": 560,\n      \"name\": \"Vrbanja\",\n      \"county\": \"Vukovarsko-srijemska\",\n      \"postCode\": 32257\n  },\n  {\n      \"id\": 561,\n      \"name\": \"Zagrebačka županija\",\n      \"county\": \"Zagrebačka-županija\",\n      \"postCode\": 10000\n  }\n];\n","export const calcOIB = (s: string): string => {\n  if (s.length < 10) {\n    return '';\n  }\n  var a = 0;\n  for(var i = 0; i < 10; i++) {\n    if (s[i] < '0' || s[i] > '9') {\n      return '';\n    }\n    a += Number.parseInt(s[i]);\n    a %= 10;\n    if (!a) {\n      a = 10;\n    }\n    a *= 2;\n    a %= 11;\n  }\n  var cnumber = 11 - a;\n  if (cnumber === 10) {\n    cnumber = 0;\n  }\n  return cnumber.toString();\n};\n\nexport const checkOIB = (s: string): boolean => (s.length === 11) && (calcOIB(s) === s[10]);\n\n/*\n  if (s.length != 11) {\n    return false;\n  }\n  return calcOIB(s) == s[11];\n};\n*/\n/*\ncreate or replace function hck.calc_oib(s text)\n returns text\n language plpgsql\nas $function$\ndeclare\n  i int;\n  a int := 10;\n  c text;\n  cnumber int;\nbegin\n  if length(s) < 10 then\n    return '';\n  end if;\n  for i in 1..10 loop\n    c := substr(s, i, 1);\n    if c < '0' or c > '9' then\n      return '';\n    end if;\n    a := a + c::int;\n    a := a % 10;\n    if a = 0 then\n      a := 10;\n    end if;\n    a := a * 2;\n    a := a % 11;\n  end loop;\n  cnumber := 11 - a;\n  if cnumber = 10 then\n    cnumber := 0;\n  end if;\n  return cnumber::text;\nend;\n$function$\n;\n\ncreate or replace function hck.check_oib(s text)\n returns boolean\n language plpgsql\nas $function$\nbegin\n  if length(s) != 11 then\n    return false;\n  end if;\n  return hck.calc_oib(s) = substr(s, 11, 1);\nend;\n$function$\n;\n*/","import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl,  TextField, FormControlLabel, Checkbox, FormLabel, RadioGroup, Radio, FormHelperText } from '@material-ui/core';\nimport Law from './Law';\nimport CreatableSelect from 'react-select/creatable';\nimport Datetime from 'react-datetime';\nimport '../../node_modules/react-datetime/css/react-datetime.css';\nimport Select from 'react-select';\nimport { request } from \"../utils/requests\"\nimport { ListItem, GroupedOption, groupingOptions, sortData, defaultDataGroupSort, emptyGroup } from \"../utils/json-methods\"\nimport { genders } from \"../utils/data\"\nimport { useHistory } from \"react-router-dom\";\nimport { checkOIB } from \"../utils/oib\";\nimport { parse } from \"date-fns\";\n\n/*\nDateTime.d.ts - at line 101 add next line>\nrenderInput?: any;\n*/\n\nrequire('moment/locale/hr');\n\nfunction Registration() {\n  const groupStyles: React.CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    fontSize: '1rem',\n    borderTop: '2px #b7b4b4 solid',\n    borderBottom: '1px #b7b4b496 solid',\n    padding: '5px 0'\n  };\n  const groupBadgeStyles: React.CSSProperties = {\n    backgroundColor: 'rgb(235, 236, 240)',\n    color: 'rgb(23, 43, 77)',\n    lineHeight: '1rem',\n    minWidth: '1px',\n    textAlign: 'center',\n    fontSize: '0.7rem',\n    borderRadius: '2em',\n    padding: '0.16666666666667em 0.5em',\n  };\n  const formatGroupLabel = (data: any) => (\n    <div style={groupStyles}>\n      <span>{data.label}</span>\n      <span style={groupBadgeStyles}>{data.options.length}</span>\n    </div>\n  );\n  //const newGroupedPlaces = groupingOptions(placesData, (place: Place) => ({ value: place.id, label: `${place.name}, ${place.postCode}, ${place.county}`}), \"county\");\n  const initDateTime: any = undefined;\n  const [dateTimeOpened, setDateTimeOpen] = useState(initDateTime);\n  const [dateTimeValue, setDateTimeValue] = useState(new Date(\"1990-1-1\"));\n\n  const [groupedPlaces, setGroupedPlaces] = useState(emptyGroup);\n\n  // dob\n  const [errorDOB, setErrorDOB] = React.useState(false);\n  const [helperTextDOB, setHelperTextDOB] = React.useState('');\n\n  // OIB\n  const [errorOIB, setErrorOIB] = React.useState(false);\n  const [helperTextOIB, setHelperTextOIB] = React.useState('');\n\n  // Gender\n  const [gender, setGender] = React.useState('');\n  const [errorGender, setErrorGender] = React.useState(false);\n  const [helperTextGender, setHelperTextGender] = React.useState('');\n\n  // placeOfLiving\n  const [placeOfLiving, setPlaceOfLiving] = React.useState({ id: undefined });\n  const [errorPlaceOfLiving, setErrorPlaceOfLiving] = React.useState(false);\n  const [helperTextPlaceOfLiving, setHelperTextPlaceOfLiving] = React.useState('');\n\n  // placeOfVolunteering\n  const [placeOfVolunteering, setPlaceOfVolunteering] = React.useState({ id: undefined });\n  const [errorPlaceOfVolunteering, setErrorPlaceOfVolunteering] = React.useState(false);\n  const [helperTextPlaceOfVolunteering, setHelperTextPlaceOfVolunteering] = React.useState('');\n\n  // qualifications\n  const [qualificationSelect, setQualificationSelect] = React.useState(emptyGroup);\n  const [qualificationList, setQualificationList] = React.useState(emptyGroup);\n  const [customQualificationList, setCustomQualificationList] = React.useState([]);\n\n  // experiences\n  const [experienceSelect, setExperienceSelect] = React.useState(emptyGroup);\n  const [experienceList, setExperienceList] = React.useState(emptyGroup);\n  const [customExperienceList, setCustomExperienceList] = React.useState([]);\n\n  // services\n  const [serviceSelect, setServiceSelect] = React.useState(emptyGroup);\n  const [serviceList, setServiceList] = React.useState(emptyGroup);\n  const [customServiceList, setCustomServiceList] = React.useState([]);\n\n  // skills\n  const [skillSelect, setSkillSelect] = React.useState(emptyGroup);\n  const [skillList, setSkillList] = React.useState(emptyGroup);\n  const [customSkillList, setCustomSkillList] = React.useState([]);\n\n  const history = useHistory();\n\n  //setGroupedPlaces(newGroupedPlaces);\n\n  //const newPlaces = join(places, counties, (p: any, c: any) => (p.county === c.id) ? { ...p, countyName: c.name } : null );\n  //console.log(\"newPlaces:\", newPlaces);\n\n  useEffect(() => {\n    console.log(\"before fetching...\");\n\n    // fetching places\n    request('places', (placesData: any) => {\n      console.log(\"placesData:\", placesData);\n      const places = placesData.map((place: any) => ({ value: place.id, name: place.name, postcode: place.postCode, label: `${place.name}, ${place.postCode}, ${place.county}`, group: place.county }));\n      // const sortedPlaces = sortData(places, [\"group\", \"label\"]);\n\n      const sortedPlaces = sortData(places, [\n        \"group\",\n        (a: any, b: any) => {\n          var cmp = 0;\n          const groupAName = a.group.toLocaleLowerCase();\n          const groupBName = b.group.toLocaleLowerCase();\n          const indexA = groupAName.indexOf(a.name.toLocaleLowerCase());\n          const indexB = groupBName.indexOf(b.name.toLocaleLowerCase());\n          if ((indexA === -1) && (indexB !== -1)) {\n            cmp = 1;  \n          }\n          else if ((indexA !== -1) && (indexB === -1)) {\n            cmp = -1;\n          } else {\n            if ((indexA >= 0) && (indexB >= 0)) {\n              cmp = b.name.length - a.name.length;\n            }\n            if (cmp === 0) {\n              cmp = a.postcode - b.postcode;\n            }\n            if (cmp === 0) {\n              cmp = a.label.localeCompare(b.label);\n            }\n          }\n          /*\n          console.log(\"comparing\", a, b, \"with result\", cmp);\n          console.log(\"groupAName\", groupAName, \"groupBName\", groupBName);\n          console.log(\"indexA\", indexA, \"indexB\", indexB);\n          */\n          return cmp;\n          }\n      ]);\n\n      const newGroupedPlaces = groupingOptions(sortedPlaces);\n      setGroupedPlaces(newGroupedPlaces);\n    });\n\n    // fetching qualifications\n    request('qualifications', (qualificationsData: any) => {\n      console.log(\"qualificationsData:\", qualificationsData);\n      const qualifications = qualificationsData.map((qualification: any) => (\n        {\n          value: qualification.id, \n          label: qualification.name, \n          group: qualification.qualificationGroup ? qualification.qualificationGroup.name : '', \n          orderNum: qualification.orderNum, \n          groupOrderNum: qualification.qualificationGroup ? qualification.qualificationGroup.orderNum : undefined\n        }));\n      const sortedQualifications = sortData(qualifications, defaultDataGroupSort);\n      const newGroupedQualifications = groupingOptions(sortedQualifications);\n      setQualificationSelect(newGroupedQualifications);\n    });\n\n    // fetching experiences\n    request('experiences', (experiencesData: any) => {\n      console.log(\"experiencesData:\", experiencesData);\n      const experiences = experiencesData.map((experience: any) => (\n        { \n          value: experience.id, \n          label: experience.name, \n          group: experience.experienceGroup ? experience.experienceGroup.name : '', \n          orderNum: experience.orderNum,\n          groupOrderNum: experience.experienceGroup ? experience.experienceGroup.orderNum : undefined\n        }));\n      const sortedExperiences = sortData(experiences, defaultDataGroupSort);\n      const newGroupedExperiences = groupingOptions(sortedExperiences);\n      setExperienceSelect(newGroupedExperiences);\n    });\n\n    // fetching services\n    request('services', (servicesData: any) => {\n      console.log(\"servicesData:\", servicesData);\n      const services = servicesData.map((service: any) => (\n        { \n          value: service.id, \n          label: service.name, \n          orderNum: service.orderNum \n        }));\n      const sortedServices = sortData(services, [\"orderNum\", \"label\"]);\n      setServiceSelect(sortedServices);\n    });\n\n    // fatching skills\n    request('skills', (skillsData: any) => {\n      console.log(\"skillsData:\", skillsData);\n      const skills = skillsData.map((skill: any) => (\n        { \n          value: skill.id, \n          label: skill.name, \n          group: skill.skillGroup ? skill.skillGroup.name : '', \n          orderNum: skill.orderNum, \n          groupOrderNum: skill.skillGroup ? skill.skillGroup.orderNum : undefined\n        }));\n      const sortedSkills = sortData(skills, defaultDataGroupSort);\n      const newGroupedSkills = groupingOptions(sortedSkills);\n      setSkillSelect(newGroupedSkills);\n    });\n\n    console.log(\"after fetching...\");\n  }, []);\n\n  const renderInput = (props: any) => <TextField id=\"dob\" className=\"textField fullWidth\" variant=\"outlined\" {...props} />;\n\n  const validateOIB = (target: any, oib: string, focus: boolean = false): boolean => {\n    // console.log(\"validateOIB:\", target);\n    // console.log(\"validating:\", oib);\n    if (!checkOIB(oib)) {\n      console.error(`OIB \"${oib}\" is not valid`);\n      setHelperTextOIB('OIB je neispravan');\n      setErrorOIB(true);\n      if (focus) {\n        target.focus();\n      }\n      return false;\n    }\n    setHelperTextOIB('');\n    setErrorOIB(false);\n    return true;\n  }\n\n  const parseDate = (s: string): Date | null => {\n    const strDate = s.replace(/ /gi, \"\");\n    var dDate = parse(strDate, \"dd.MM.yyyy\", new Date());\n    //console.log(`\"${dDate.toString()}\" typeof ${typeof dDate}`);\n    if (dDate.toString() === \"Invalid Date\") {\n      // special char\n      const sc: any = strDate.split('').find((c: any) => !(c > -1));\n      if (!sc) {\n        return null;\n      }\n      console.log(`special char \"${sc}\"`);\n      const dateParts = strDate.split(sc);\n      if (dateParts.length >= 3) {\n        const newDate = dateParts.filter((p: string) => p.length > 0).join(sc);\n        if (dateParts[0].length === 4) {\n          dDate = parse(newDate, `yyyy${sc}MM${sc}dd`, new Date());\n        } else {\n          dDate = parse(newDate, `dd${sc}MM${sc}yyyy`, new Date());\n        }\n      }\n    }\n    if (dDate.toString() === \"Invalid Date\") {\n      return null;\n    }\n    const d = new Date(dDate.getTime() - dDate.getTimezoneOffset() * 60000); // fix time-zone and return only date part of datetime\n    return d;\n  }\n\n  const validatingFields = (form: any, data: any): boolean => {\n    if (!validateOIB(form.oib, data.oib, true)) {\n      return false;\n    }\n\n    if (!gender) {\n      console.error('gender is not valid');\n      setHelperTextGender('nije odabran spol');\n      setErrorGender(true);\n      form.gender00.focus();\n      return false;\n    }\n    if (errorGender) {\n      setHelperTextGender('');\n      setErrorGender(false);\n    }\n\n    // dob\n    if (!data.dob) {\n      console.error('dob is null');\n      setHelperTextDOB('nije unesen datum rođenja');\n      setErrorDOB(true);\n      form.dob.focus();\n      return false;\n    }\n    data.dob = parseDate(data.dob);\n    if (!data.dob) {\n      console.error(\"Invalid date:\", data.dob);\n      setHelperTextDOB('datum rođenja neispravan');\n      setErrorDOB(true);\n      form.dob.focus();\n      return false;\n    }\n    data.dob = data.dob.toISOString().substr(0, 10);\n    if (errorDOB) {\n      setHelperTextDOB('');\n      setErrorDOB(false);\n    }\n\n    // placeOfLiving\n    if (!placeOfLiving.id) {\n      console.error('placeOfLiving is null');\n      setHelperTextPlaceOfLiving('nije odabrano mjesto prebivališta');\n      setErrorPlaceOfLiving(true);\n      form.placeOfLiving.focus();\n      return false;\n    }\n    if (errorPlaceOfLiving) {\n      setHelperTextPlaceOfLiving('');\n      setErrorPlaceOfLiving(false);\n    }\n\n    // placeOfVolunteering\n    if (!placeOfVolunteering.id) {\n      console.error('placeOfVolunteering is null');\n      setHelperTextPlaceOfLiving('nije odabrano mjesto u kojem želite volontirati');\n      setErrorPlaceOfVolunteering(true);\n      form.placeOfVolunteering.focus();\n      return false;\n    }\n    if (errorPlaceOfVolunteering) {\n      setHelperTextPlaceOfVolunteering('');\n      setErrorPlaceOfVolunteering(false);\n    }\n\n    return true;\n  }\n\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n    console.log(\"fields:\", event.target.elements);\n    const data = {\n      firstName: event.target.firstName.value,\n      lastName: event.target.lastName.value,\n      dob: event.target.dob.value,\n      oib: event.target.oib.value,\n      gender,\n      address: event.target.address.value,\n      placeOfLiving,\n      placeOfVolunteering,\n      phone: event.target.phone.value,\n      email: event.target.email.value,\n      iceName: event.target.iceName.value,\n      icePhone: event.target.icePhone.value,\n      householdElderly: event.target.householdElderly.checked,\n      householdPregnatWomen: event.target.householdPregnatWomen.checked,\n      pregnatWoman: event.target.pregnatWoman.checked,\n      householdChild: event.target.householdChild.checked,\n      householdChronicPatient: event.target.householdChronicPatient.checked,\n      healthfine: event.target.healthfine.checked,\n      qualifications: qualificationList,\n      customQualifications: customQualificationList,\n      experiences: experienceList,\n      customExperiences: customExperienceList,\n      services: serviceList,\n      customServices: customServiceList,\n      skills: skillList,\n      customSkills: customSkillList,\n      healthDetails: event.target.healthDetails.value,\n      availabilityHoursWeekly: event.target.availabilityHoursWeekly.value,\n      availabilityDetails: event.target.availabilityDetails.value,\n      criminalRecord: event.target.criminalRecord.value,\n    };\n    console.log(\"form data:\", data);\n    if (!validatingFields(event.target, data)) {\n      return;\n    }\n    request('volunteers', (data: any) => {\n        console.log(\"response:\", data);\n        history.push(\"/confirmation\");\n        /*\n          is status === 200 {\n        }\n        */\n      }, \"POST\", data);\n  }\n\n  const onChangeDateTime = (event: any) => {\n    console.log(\"datetime changed:\", event); \n    setDateTimeOpen(false);\n    const dateTime = event._isValid ? event._d : parseDate(event);\n    if (dateTime) {\n      setDateTimeValue(dateTime);\n    }\n    setTimeout(() => setDateTimeOpen(initDateTime), 100);\n  }\n\n  const getValues = (values: any[], list: any[], custom: any[]) => {\n    if (values) {\n      const aValues = Array.isArray(values) ? values : [values];\n      aValues.forEach((item: any) => {\n        if (item[\"__isNew__\"]) {\n          custom.push({ name: item.label});\n        } else {\n          list.push({ id: item.value });\n        }\n      });\n    }\n  };\n\n  const genderOnChange = (newGender: any, action: any) => {\n    console.log(\"on change:\", newGender, action);\n    setGender(newGender ? newGender.value : null);\n    setHelperTextGender('');\n    setErrorGender(false);\n  }\n\n  const qualificationsOnChange = (values: any, action: any) => {\n    console.log(\"qualifications on change:\", values);\n    const lQualificationList: any = [];\n    const lCustomQualificationList: any = [];\n    getValues(values, lQualificationList, lCustomQualificationList);\n    setQualificationList(lQualificationList);\n    setCustomQualificationList(lCustomQualificationList);\n  }\n\n  const experiencesOnChange = (values: any, action: any) => {\n    console.log(\"experiences on change:\", values);\n    getValues(values, experienceList, customExperienceList);\n    const lExperienceList: any = [];\n    const lCustomExperienceList: any = [];\n    getValues(values, lExperienceList, lCustomExperienceList);\n    setExperienceList(lExperienceList);\n    setCustomExperienceList(lCustomExperienceList);\n  }\n\n  const servicesOnChange = (values: any, action: any) => {\n    console.log(\"services on change:\", values);\n    const lServiceList: any = [];\n    const lCustomServiceList: any = [];\n    getValues(values, lServiceList, lCustomServiceList);\n    setServiceList(lServiceList);\n    setCustomServiceList(lCustomServiceList);\n  }\n\n  const skillsOnChange = (values: any, action: any) => {\n    console.log(\"skills on change:\", values);\n    const lSkillList: any = [];\n    const lCustomSkillList: any = [];\n    getValues(values, lSkillList, lCustomSkillList);\n    setSkillList(lSkillList);\n    setCustomSkillList(lCustomSkillList);\n  }\n\n  const placeOfLivingOnChange = (place: any, action: any) => {\n    console.log(\"on change:\", place, action);\n    setPlaceOfLiving({ id: place ? place.value : null });\n    setErrorPlaceOfLiving(false);\n    setHelperTextPlaceOfLiving('');\n  }\n\n  const placeOfVolunteeringOnChange = (place: any, action: any) => {\n    console.log(\"on change:\", place, action);\n    setPlaceOfVolunteering({ id: place ? place.value : null });\n    setErrorPlaceOfVolunteering(false);\n    setHelperTextPlaceOfVolunteering('');\n  }\n\n  const noOptionsMessage = (search: any) => {\n    console.log(\"search:\", search);\n    console.log(\"typeof search:\", typeof search);\n    return search.inputValue ? `nije nađeno \"${search.inputValue}\"` : \"nema podataka\";\n  };\n\n  const includes = (search: string, options: GroupedOption[]): boolean => {\n    search = search.trim().toLocaleLowerCase();\n    return !search.length || !!options.find(category => category && category.options && category.options.find((item: ListItem) => item && item.label && item.label.toLocaleLowerCase() === search));\n  }\n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n\n    <div className=\"ctnRegister\">\n      <form onSubmit={onSubmit} action=\"http://localhost:8080/api/v1/volunteers\" target=\"_self\" autoComplete=\"off\">\n      <fieldset className=\"fieldset\">\n        <legend>Osobni podaci volontera</legend>\n        <FormControlLabel control={\n          <TextField id=\"firstName\" required={true} className=\"textField\" variant=\"outlined\" />\n          } label=\"Ime*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={\n          <TextField id=\"lastName\" required={true} className=\"textField\" variant=\"outlined\" /> }\n          label=\"Prezime*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControl error={errorDOB}>\n          <FormControlLabel id=\"dob\" control={\n            <Datetime viewMode=\"years\" viewDate={dateTimeValue} dateFormat={\"DD.MM.YYYY\"} open={dateTimeOpened} onChange={onChangeDateTime} closeOnSelect={true} className=\"textField rdt-datepicker\" renderInput={renderInput} timeFormat={false} locale=\"hr-HR\" />\n            }  label=\"Datum rođenja*:\" className=\"textField\" labelPlacement=\"top\"\n          />\n          <FormHelperText className=\"helper-text\">{helperTextDOB}</FormHelperText>\n        </FormControl>\n\n        <FormControlLabel control={ \n          <TextField id=\"oib\" error={errorOIB} required={true} inputProps={{ onBlur: (event) => validateOIB(event.target, event.target.value), minLength: 11, maxLength: 11 }} className=\"textField\" variant=\"outlined\" helperText={helperTextOIB} />\n          } label=\"OIB*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControl error={errorGender}>\n          <FormControlLabel control={\n            <Select inputId=\"gender00\" className=\"fullWidth\" required={true} placeholder=\"Odaberi...\" onChange={genderOnChange} options={genders} noOptionsMessage={noOptionsMessage}\n            />\n            } label=\"Spol*:\" className=\"textField\" labelPlacement=\"top\"\n          />\n          <FormHelperText className=\"helper-text\">{helperTextGender}</FormHelperText>\n        </FormControl>\n\n        <FormControlLabel control={ \n          <TextField id=\"address\" required={true} className=\"textField\" variant=\"outlined\" />\n          } label=\"Adresa*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n        \n        <FormControl error={errorPlaceOfLiving}>\n          <FormControlLabel control={ \n            <Select inputId=\"placeOfLiving\" className=\"fullWidth\" required={true} placeholder=\"Odaberi...\" onChange={placeOfLivingOnChange} options={groupedPlaces} noOptionsMessage={noOptionsMessage}\n            />\n            }\n            label=\"Mjesto prebivališta*:\" className=\"textField\" labelPlacement=\"top\"\n          />\n          <FormHelperText className=\"helper-text\">{helperTextPlaceOfLiving}</FormHelperText>\n        </FormControl>\n\n        <FormControl error={errorPlaceOfVolunteering}>\n          <FormControlLabel control={ \n            <Select inputId=\"placeOfVolunteering\" className=\"fullWidth\" required={true} placeholder=\"Odaberi...\" onChange={placeOfVolunteeringOnChange} options={groupedPlaces} noOptionsMessage={noOptionsMessage}\n            />\n            }\n            label=\"Mjesto u kojem želite volontirati*:\" className=\"textField\" labelPlacement=\"top\"\n          />\n          <FormHelperText className=\"helper-text\">{helperTextPlaceOfVolunteering}</FormHelperText>\n        </FormControl>\n\n        <FormControlLabel control={ \n          <TextField id=\"phone\" required={true} className=\"textField\" variant=\"outlined\" />\n          } label=\"Broj telefona/mobitela*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <TextField id=\"email\" required={true} className=\"textField\" variant=\"outlined\" type=\"email\" />\n          } label=\"Email adresa*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel\n          control={\n            <TextField id=\"iceName\" required={true} className=\"textField\" variant=\"outlined\" \n              helperText=\"Molimo unesite ime i prezime osobe koje možemo kontaktirati u slučaju nužde, kao i broj telefona te osobe.\"\n            />\n          } label=\"Kontakt u slučaju nužde (član obitelji, prijatelj, sl.)*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <TextField id=\"icePhone\" required={true} className=\"textField\" variant=\"outlined\" />\n          } className=\"textField\" label=\"Broj telefona kontakta u nuždi*:\" labelPlacement=\"top\"\n        />\n      </fieldset>\n\n      <fieldset className=\"fieldset\">\n        <legend>Važne informacije</legend>\n        <FormControl>\n          <FormControlLabel control={ <Checkbox name=\"householdElderly\" color=\"primary\" /> } label=\"Imate li u kućanstvu osobu stariju od 65 godina?\"/>\n        <FormHelperText className=\"helper-text\">Važne informacije tijekom voloniranja za vrijeme epidemije COVID-19</FormHelperText>\n        </FormControl>\n        <FormControlLabel control={ <Checkbox name=\"householdPregnatWomen\" color=\"primary\" /> } label=\"Imate li u kućanstvu trudnicu?\" />\n        <FormControlLabel control={ <Checkbox name=\"pregnatWoman\" color=\"primary\" /> } label=\"Jeste li vi trudnica?\" />\n        <FormControlLabel control={ <Checkbox name=\"householdChild\" color=\"primary\" /> } label=\"Imate li u kućanstvu malo dijete?\" />\n        <FormControlLabel control={ <Checkbox name=\"householdChronicPatient\" color=\"primary\" /> } label=\"Imate li u kućanstvu kroničnog bolesnika?\" />\n        <FormControlLabel control={ <Checkbox name=\"healthfine\" color=\"primary\" /> } label=\"Imate li sami zdravstvenih poteškoća?\" />\n      </fieldset>\n\n      <fieldset className=\"fieldset\">\n        <legend>Dodatne informacije</legend>\n        <div className=\"fieldset-info\">Kako bi brže i učinkovitije rasporedili volontere na odgovarajuće volonterske pozicije i najbolje iskoristili resurse kojima raspolažemo, molimo da odgovorite na dodatnih nekoliko pitanja.</div>\n\n        <FormControlLabel control={ \n          <CreatableSelect inputId=\"qualifications\" className=\"fullWidth\" placeholder=\"Odaberi...\" onChange={qualificationsOnChange} options={qualificationSelect} closeMenuOnSelect={false}\n            isValidNewOption={search => !includes(search, qualificationSelect)} formatGroupLabel={formatGroupLabel} formatCreateLabel={option => `Dodaj: \"${option}\"`} noOptionsMessage={noOptionsMessage} isMulti\n          />\n          }\n          label=\"Zanimanje/profesionalne kvalifikacije*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <CreatableSelect inputId=\"experiences\" className=\"fullWidth\" placeholder=\"Odaberi...\" onChange={experiencesOnChange} options={experienceSelect} closeMenuOnSelect={false}\n            isValidNewOption={search => !includes(search, experienceSelect)} formatGroupLabel={formatGroupLabel} formatCreateLabel={option => `Dodaj: \"${option}\"`} noOptionsMessage={noOptionsMessage} isMulti\n          />\n          }\n          label=\"Iskustva*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <CreatableSelect inputId=\"services\" className=\"fullWidth\" placeholder=\"Odaberi...\" onChange={servicesOnChange} options={serviceSelect} closeMenuOnSelect={false}\n            isValidNewOption={search => !includes(search, serviceSelect)} formatCreateLabel={option => `Dodaj: \"${option}\"`} noOptionsMessage={noOptionsMessage} isMulti\n          />\n          }\n          label=\"Dodatne usluge*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={\n          <CreatableSelect inputId=\"skills\" className=\"fullWidth\" placeholder=\"Odaberi...\" onChange={skillsOnChange} options={skillSelect} closeMenuOnSelect={false}\n            isValidNewOption={search => !includes(search, skillSelect)} formatGroupLabel={formatGroupLabel} formatCreateLabel={option => `Dodaj: \"${option}\"`} noOptionsMessage={noOptionsMessage} isMulti\n          />\n          }\n          label=\"Dodatne vještine*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <TextField id=\"healthDetails\" required={true} className=\"textField\" variant=\"outlined\" multiline\n            helperText=\"U svrhu zaštite vašeg zdravlja molimo da navedete zdravstvene detalje (npr. alergije, kronične bolesti i sl.)\"\n          /> \n          }\n          label=\"Zdravstveni detalji*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={ \n          <TextField id=\"availabilityHoursWeekly\" required={true} className=\"textField\" variant=\"outlined\" type=\"number\" />\n          }\n          label=\"Koliko ste sati tjedno spremni izdvojiti na volontiranje*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n\n        <FormControlLabel control={\n            <TextField id=\"availabilityDetails\" required={true} className=\"textField\" variant=\"outlined\" multiline\n              helperText=\"Što preciznije navedite kada ste dostupni za volontiranje,  koje dane u tjednu i u kojem vremenskom razdoblju (npr. pon od 18-20h, uto od 11-14h)\" /> \n          } \n          label=\"Ostali detalji o vašoj raspoloživosti za volontiranje*:\" className=\"textField\" labelPlacement=\"top\"\n        />\n      </fieldset>\n\n      <Law></Law>\n      <FormLabel component=\"legend\">\n      </FormLabel>\n\n      <RadioGroup aria-label=\"criminalRecord\" name=\"criminalRecord\">\n        <div className=\"criminalRecord\">\n          <FormControlLabel value=\"true\" control={<Radio required={true} className=\"no-select\" color=\"primary\" />} label=\"Da\"/>\n          <FormControlLabel value=\"false\" control={<Radio required={true} className=\"no-select\" color=\"primary\" />} label=\"Ne\"/>\n        </div>\n      </RadioGroup>\n\n      <div className=\"ctnSubmit\">\n        <Button className=\"btnSumbit\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\">Potvrdi</Button>\n      </div>\n      </form>\n    </div>\n\n    </header>\n  </div>\n  );\n}\n\nexport default Registration","import React, { useState } from \"react\";\nimport { Button, FormControlLabel, RadioGroup, Radio } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/volonteri.jpg';\n\nfunction Approval() {\n  const [approved, setApproved] = useState(\"null\");\n  const onChange = (event: any) => {\n    const approvedSelected: any = (event.target as HTMLInputElement).value;\n    setApproved(approvedSelected);\n  }\n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n\n    <div className=\"ctnApproval\">\n    <div className=\"approval\">\n\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <h1>Obrazac za prijavu volontera</h1>\n        <p>Poštovani,</p>\n        <p>\n        hvala Vam što ste iskazali želju i volju za volontiranjem u Hrvatskom Crvenom križu i društvima Crvenog križa diljem Hrvatske. \n        Ukoliko ste u mogućnosti, molimo Vas da se za volontiranje prijavite direktno društvima Crvenog križa na čijem području se nalazite i želite volontirati. Kontakt podaci svih društava Crvenog križa u Hrvatskoj nalaze se na poveznici \n        </p>\n        <a href=\"https://www.hck.hr/novosti/ovo-su-kontakti-drustava-crvenoga-kriza-za-ljude-u-potrebi/10282\">\n          https://www.hck.hr/novosti/ovo-su-kontakti-drustava-crvenoga-kriza-za-ljude-u-potrebi/10282\n        </a>\n\n        <p>\n        Ovo je centralna evidencija spontanih volontera Hrvatskog Crvenog križa, iz koje ćemo podatke o potencijalnim volonterima prosljeđivati društvima Crvenog križa koji organiziraju aktivnosti sukladno potrebama lokalnog stanovništva na čijem području djeluju. \n        Nakon što ostavite svoje podatke, molimo Vas sačekajte poziv naših kolega iz društava Crvenog križa, koji će Vas pozvati ukoliko će im zatrebati Vaša pomoć. \n        </p>\n\n        <p>\n        Hvala!\n        </p>\n        <p>\n        Hrvatski Crveni križ\n        </p>\n      </div>\n      <div className=\"statement\">\n        <p>\n        Podnošenjem ovog obrasca dajete suglasnost za prikupljanje i obradu Vaših osobnih podataka u svrhu organizacije i provedbe volonterskih aktivnosti društava Hrvatskog Crvenog križa u skladu s Općom uredbom o zaštiti podataka (Uredba EU 2016/679) i Zakonom o provedbi Opće uredbe o zaštiti podataka (NN 42/2018). Podaci su nužni radi organizacije i provedbe volonterskih aktivnosti društva Crvenog križa.\n        </p>\n        <p>\n        Podaci mogu biti dijeljeni s Hrvatskim Crvenim križem, drugim društvima Crvenog križa te s tijelima javne vlasti u slučaju zaprimanja zahtjeva sukladno zakonskim propisima.\n        </p>\n        <p>\n        Prijava i podaci iz nje će se čuvati do roka predviđenog u članku 10., stavku 2. Zakona o financijskom poslovanju i računovodstvu neprofitnih organizacija, odnosno 11 godina.\nVoditelj obrade Vaših osobnih podataka je društvo Crvenog križa koje će Vas kontaktirati radi uključivanja u volonterski rad. Ukoliko i kada zaprimimo Vaš zahtjev za pristup, ispravak ili brisanje osobnih podataka, opoziv privole, zahtjev za ograničenjem obrade vaših osobnih podataka, odnosno bilo koji sličan prigovor, odmah ćemo postupiti prema Vašem zahtjevu te Vas o istom izvijestiti. Navedena prava možete ostvariti slanjem pisanog zahtjeva na e-mail društva Crvenog križa koje će Vas uključiti u volonterski rad.        \n        </p>\n      </div>\n      <div>\n        <RadioGroup aria-label=\"approval\" name=\"approval\">\n          <div className=\"approval-radiobuttons\">\n            <FormControlLabel value=\"true\" control={<Radio onChange={onChange} required color=\"primary\" />} label=\"dajem suglasnost\"/>\n            <FormControlLabel value=\"false\" control={<Radio onChange={onChange} required color=\"primary\" />} label=\"ne dajem suglasnost\"/>\n          </div>\n        </RadioGroup>\n      </div>\n      <div className=\"buttons\">\n        <div className=\"btnContainer\">\n          <Link to={approved === \"true\" ? \"/registration\" : \"/confirmation\" }>\n            <Button disabled={approved === \"null\"} className=\"btn\" variant=\"contained\" color=\"primary\">Dalje</Button>\n          </Link>\n        </div>\n        <div className=\"btnContainer\">\n          <Link to=\"/login\">\n            <Button className=\"btn\" variant=\"contained\" color=\"primary\">Login</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n    </div>\n\n</header>\n</div>\n  )\n}\n\nexport default Approval\n","import React from \"react\";\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/volonteri.jpg';\n\nfunction Confirmation() {\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n\n    <div className=\"ctnConfirmation\">\n    <div className=\"approval\">\n\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <h2>Obrazac za prijavu volontera</h2>\n      </div>\n      <div className=\"statement\">\n      <p>\n        Hvala!\n        </p>\n        <p>\n        Hrvatski Crveni križ\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <div className=\"btnContainer\">\n          <Link to=\"/\">     \n            <Button className=\"btn\" variant=\"contained\" color=\"primary\">Pošalji drugi odgovor</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n    </div>\n\n</header>\n</div>\n  )\n}\n\nexport default Confirmation\n","import React, { useState } from \"react\";\nimport { Container, CssBaseline, Typography, TextField, FormControlLabel, Button, makeStyles, Checkbox, InputAdornment, IconButton } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    //marginTop: theme.spacing(1),\n    marginTop: '3rem',\n    width: '100%', // Fix IE 11 issue.\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\nfunction Login() {\n  const classes = useStyles();\n\n  const adminEmail = \"admin\";\n  const adminPassword = \"admin-hck2020\";\n\n  const [email, setEmail] = useState(adminEmail);\n  const [password, setPassword] = useState(adminPassword);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const history = useHistory();\n\n  const changeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  }\n\n  const changePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  }\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  const validateForm = (event: any) => {\n    event.preventDefault();\n    if((email === adminEmail) && (password === adminPassword)) {\n      history.push(\"/list\");\n      return true;\n    }\n    else {\n      return false;\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">Prijava djelatnika HCK društava</Typography>\n        <form className={classes.form} noValidate onSubmit={validateForm}>\n          <FormControlLabel control={\n              <TextField id=\"email\" required value={email} onChange={changeEmail} fullWidth margin=\"normal\" className=\"textField\" variant=\"outlined\" autoFocus\n              />\n            }\n            label=\"Korisničko ime:\" className=\"textField\" labelPlacement=\"top\"\n          />\n          <FormControlLabel control={\n              <TextField id=\"password\" required value={password} onChange={changePassword} fullWidth className=\"textField\" variant=\"outlined\" type={showPassword ? 'text' : 'password' }\n                InputProps={{\n                  endAdornment: \n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                }}\n              />\n            }\n            label=\"Lozinka:\" className=\"textField\" labelPlacement=\"top\"\n          />\n\n          <FormControlLabel\n            className=\"no-select\"\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Zapamti prijavu\"\n          />\n          <Button type=\"submit\" className={classes.submit} fullWidth variant=\"contained\" color=\"primary\">Prijava</Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default Login","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport PanoramaWideAngleIcon from '@material-ui/icons/PanoramaWideAngle';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n    '& div.label': {\n      display: 'none',\n      width: '0px',\n      maxWidth: '0px'\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    // margin: theme.spacing(1),\n    margin: '1px ' + theme.spacing(1) + 'px 1px 0',\n  },\n  'label-not-sent': {\n    display: 'block',\n    color: 'grey',\n  },\n  'label-not-passed': {\n    display: 'block',\n    color: '#E10050'\n  },\n  'label-passed': {\n    display: 'block',\n    color: '#46C243'\n  }\n}));\n\nexport default function CustomSelect(props: any) {\n  //console.log(\"CustomSelect props:\", props);\n  const classes = useStyles();\n  const [status, setStatus] = React.useState(props.status);\n  const handleChange = (event: any) => {\n    setStatus(event.target.value);\n    props.onChange(event.target.value);\n  };\n  return (\n    <form className={classes.root} autoComplete=\"off\">     \n      <FormControl className={classes.margin}>\n        <Select\n          value={status}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value={\"null\"}>\n            <ListItemIcon>\n              <PanoramaWideAngleIcon className={classes[\"label-not-sent\"]} />\n              <div className={'label'}>provjera nije poslana ili je u tijeku</div>\n            </ListItemIcon>\n          </MenuItem>\n          <MenuItem value={\"false\"}>\n            <ListItemIcon>\n              <ThumbDownIcon className={classes[\"label-not-passed\"]} />\n              <div className={'label'}>provjera nije prošla</div>\n            </ListItemIcon>\n          </MenuItem>\n          <MenuItem value={\"true\"}>\n            <ListItemIcon>\n              <ThumbUpIcon className={classes[\"label-passed\"]} />\n              <div className={\"label\"}>provjera je prošla</div>\n            </ListItemIcon>\n          </MenuItem>\n        </Select>\n      </FormControl>      \n    </form>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { useHistory } from \"react-router-dom\";\n\nfunction ElevationScroll(props: any) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar(props: any) {\n  const classes = useStyles();\n  const [auth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const history = useHistory();\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleMenu = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleListKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const goToLogin = () => {\n    handleClose();\n    history.push(\"/login\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <ElevationScroll {...props}>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            {/* commenting hamburger menu\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            */}\n            <Typography variant=\"h6\" className={classes.title}>\n              {props.title}\n            </Typography>\n            {auth && (\n              <div>\n                <span>admin</span>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  ref={anchorRef}\n                  color=\"inherit\"\n                >\n                <AccountCircle />\n                </IconButton>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                  {({ TransitionProps, placement }) => (\n                    <Grow\n                      {...TransitionProps}\n                      style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                      <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                          <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                            <MenuItem onClick={handleClose}>Profil</MenuItem>\n                            <MenuItem onClick={goToLogin}>Odjava</MenuItem>\n                          </MenuList>\n                        </ClickAwayListener>\n                      </Paper>\n                    </Grow>\n                  )}\n                </Popper>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport MaterialTable, { Column } from 'material-table';\nimport Switch from '@material-ui/core/Switch';\nimport CustomSelect from './CustomSelect';\nimport { request } from '../utils/requests';\nimport { format } from 'date-fns';\nimport MenuAppBar from './MenuAppBar';\nconst _filefy = require(\"filefy\");\n\ninterface Row {\n  id: number,\n  firstName: string;\n  lastName: string;\n  dob: string;\n  backgroundCheckNeeded: boolean;\n  backgroundCheckPassed: any;\n}\n\ninterface TableState {\n  columns: Array<Column<Row>>,\n  data: Row[],\n  isLoading: boolean\n}\n\nexport default function VolunteersList() {\n  const cellStyle = {\n    padding: '0 14px',\n  };\n  const getForRenderFullName = (rowData: any)  => rowData.firstName + ' ' + rowData.lastName;\n  const getForRenderDob = (rowData: any) => format(new Date(rowData.dob), 'dd.MM.yyyy');\n  const tableTitle = (count: number) => `Ukupno ${count} volonter` + (((count % 100 === 11) || (count % 10) !== 1) ? 'a' : '');\n  const [title, setTitle] = React.useState(tableTitle(0));\n  const [state, setState] = React.useState<TableState>({\n    columns: [\n      { title: 'ID', field: 'id', searchable: true,\n          ...{ width: 60 }, // width of column - https://github.com/mbrn/material-table/issues/291\n          cellStyle: { color: '#cacaca'},\n          defaultSort: 'asc'\n      },\n      { title: 'Ime i prezime', export: true, cellStyle, searchable: true, customFilterAndSearch: (filter: any, rowData: any, columnDef: any): boolean => {\n          const s = getForRenderFullName(rowData).toLocaleLowerCase();\n          return s.indexOf(filter.toLocaleLowerCase()) >= 0;\n        },\n        render: getForRenderFullName\n      },\n      { title: 'Datum rođenja', field: 'dob', type: 'date', export: false, cellStyle, searchable: true, customFilterAndSearch: (filter: any, rowData: any, columnDef: any): boolean => {\n          const s = getForRenderDob(rowData);\n          return s.indexOf(filter.toLocaleLowerCase()) >= 0;\n        },          \n        render: getForRenderDob\n      },\n      { title: 'OIB', field: 'oib', cellStyle, export: true, hidden: true, searchable: true },\n      { title: 'HCK Društvo', field: 'placeOfVolunteering.name', export: false, cellStyle, searchable: false },\n      { title: 'Potrebna provjera', field: 'backgroundCheckNeeded', type: 'boolean', export: false, cellStyle, searchable: false,\n        render: (rowData: any) =>\n        <Switch\n          checked={rowData.backgroundCheckNeeded}\n          onChange={e => {\n            //console.log(\"rowData:\", rowData);\n            setState((prevState: TableState) => {\n              const data = [...prevState.data];\n              rowData.backgroundCheckNeeded = !rowData.backgroundCheckNeeded;\n              request('volunteers/' + rowData.id, (response: any) => {\n                //console.log(\"response:\", response);\n              }, \"PUT\", rowData);\n              //console.log(\"rowData:\", rowData);\n              data[data.indexOf(rowData)] = rowData;\n              return { ...prevState, data };\n            });\n          }}\n          name=\"checkedA\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n     },\n      { title: 'Background check status', field: 'backgroundCheckPassed', type: 'boolean', export: false, cellStyle, searchable: false,\n        render: (rowData: any) => {\n          return(\n            <CustomSelect \n              status={rowData.backgroundCheckPassed == null ? \"null\" : rowData.backgroundCheckPassed.toString()}\n              onChange={(status: any) => {\n                // console.log(\"onChange bgStatus rowData:\", rowData);\n                setState((prevState: TableState) => {\n                  const data = [...prevState.data];\n                  rowData.backgroundCheckPassed = (status === \"null\") ? null : status;\n                  //console.log(\"rowData:\", rowData);\n                  request('volunteers/' + rowData.id, (response: any) => {\n                    // console.log(\"response:\", response);\n                  }, \"PUT\", rowData);\n                  data[data.indexOf(rowData)] = rowData;\n                  return { ...prevState, data };\n                });\n                console.log(\"state:\", state);\n              }}\n              >\n            </CustomSelect>\n          )\n        }\n     }\n    ],\n    data: [],\n    isLoading: true\n  });\n\n  useEffect(() => {\n    request('volunteers', (data: any) => {\n      console.log(\"volunteers:\", data);\n      setState((prevState) => ({ ...prevState, data, isLoading: false }));\n      const count= tableRef.current.dataManager.searchedData.length;\n      setTitle(tableTitle(count));\n    })\n  }, []);\n  \n  const exportCsv = (allColumns: any, allData: any) => {\n    console.log('columns:', allColumns);\n    console.log('data:', allData);\n    const columns = allColumns.filter((columnDef: any) => columnDef[\"export\"] !== false);\n    const exportedData = allData\n      .filter((rowData: any) => rowData.backgroundCheckNeeded && (rowData.backgroundCheckPassed === null))\n      .map((rowData: any) => columns.map((columnDef: any) => columnDef.render ? columnDef.render(rowData) : columnDef.field === 'oib' ? `'${rowData[columnDef.field]}` : rowData[columnDef.field]));\n\n    console.log('exported data:', exportedData);\n    new _filefy.CsvBuilder(\"Volonteri.csv\")\n      .setDelimeter(';')\n      .setColumns(columns.map((columnDef: any) => columnDef.title))\n      .addRows(exportedData)\n      .exportFile();\n  }\n\n  const tableRef: any = React.useRef();\n\n  return (\n    <>\n      <MenuAppBar title=\"HCK - pregled volontera\"></MenuAppBar>\n      <div style={{height: \"4rem\"}}></div>\n      <MaterialTable\n        title={title}\n        columns={state.columns}\n        data={state.data}\n        isLoading={state.isLoading}\n        tableRef={tableRef}\n        onSearchChange={() => {\n          if (tableRef && tableRef.current) {\n            const count= tableRef.current.dataManager.searchedData.length;\n            setTitle(tableTitle(count));\n          }\n        }}\n        options={\n          {\n            paging: false,\n            exportAllData: true,\n            exportButton: true,\n            exportDelimiter: ';',\n            exportFileName: 'Volonteri',\n            tableLayout: 'fixed',\n\n            exportCsv,\n            headerStyle: { position: 'sticky', top: 0, backgroundColor: '#ECECEC', fontWeight: 'bold' },\n            maxBodyHeight: 'calc(100vh - 128px)',\n          }\n        }\n        localization={{\n          toolbar: {\n            exportTitle: 'Izvoz podataka za provjeru',\n            exportAriaLabel: 'Izvoz podataka za provjeru u CSV',\n            exportName: 'Izvoz podataka za provjeru u CSV',\n            searchPlaceholder: 'Pretraživanje...',\n            searchTooltip: 'Pretraživanje volontera'\n          },\n          body: {\n            emptyDataSourceMessage: '',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Registration from './components/Registration';\nimport Approval from './components/Approval';\nimport Confirmation from './components/Confirmation';\nimport Login from './components/Login';\nimport './App.css';\nimport VolunteersList from './components/VolunteersList';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Approval} />\n        <Route exact path=\"/registration\" component={Registration} />\n        <Route exact path=\"/confirmation\" component={Confirmation} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/list\" component={VolunteersList} />\n      </Switch>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  //<React.StrictMode>\n    //<App />\n  //</React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}